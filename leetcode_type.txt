--- Binary Search:
    0004(h): Median of Two Sorted Arrays
    0014(e): Longest Common Prefix
    0029(m): Divide Two Integers
    0033(m): Search in Rotated Sorted Array
    0034(m): Find First and Last Position of Element in Sorted Array
    0035(e): Search Insert Position
    0069(e): Sqrt(x)
    0074(m): Search a 2D Matrix
    0081(m): Search in Rotated Sorted Array II
    0153(m): Find Minimum in Rotated Sorted Array
    0162(m): Find Peak Element
    0209(m): Minimum Size Subarray Sum
    0268(e): Missing Number
    0270(e): Closest Binary Search Tree Value
    0272(h): Closest Binary Search Tree Value II
    0278(e): First Bad Version
    0285(m): Inorder Successor in BST 
    0287(m): Find the Duplicate Number
    0300(m): Longest Increasing Subsequence
    0354(h): Russian Doll Envelopes
    0367(e): Valid Perfect Square
    0374(e): Guess Number Higher or Lower
    0410(h): Split Array Largest Sum
    0441(e): Arranging Coins
    0450(m): Delete Node in a BST
    0475(m): Heaters
    0497(m): Random Point in Non-overlapping Rectangles
    0510(m): Inorder Successor in BST II
    0528(m): Random Pick with Weight
    0540(m): Single Element in a Sorted Array
    0611(m): Valid Triangle Number
    0633(m): Sum of Square Numbers
    0658(m): Find K Closest Elements
    0669(m): Trim a Binary Search Tree
    0700(e): Search in a Binary Search Tree
    0701(m): Insert into a Binary Search Tree
    0702(m): Search in a Sorted Array of Unknown Size
    0704(e): Binary Search
    0705(e): Design HashSet
    0744(e): Find Smallest Letter Greater Than Target
    0776(m): Split BST
    0826(m): Most Profit Assigning Work
    0852(e): Peak Index in a Mountain Array
    0875(m): Koko Eating Bananas
    0981(m): Time Based Key-Value Store
    1011(m): Capacity To Ship Packages Within D Days
    1060(m): Missing Element in Sorted Array
    1064(e): Fixed Point
    1095(h): Find in Mountain Array
    1146(m): Snapshot Array
    1150(e): Check If a Number Is Majority Element in a Sorted Array
    1182(m): Shortest Distance to Target Color
    1198(m): Find Smallest Common Element in All Rows
    1228(e): Missing Number In Arithmetic Progression
    1231(h): Divide Chocolate
    1268(m): Search Suggestions System
    1274(h): Number of Ships in a Rectangle
    1283(m): Find the Smallest Divisor Given a Threshold
    1287(e): Element Appearing More Than 25% In Sorted Array
    1292(m): Maximum Side Length of a Square with Sum Less than or Equal to Threshold
    1300(m): Sum of Mutated Array Closest to Target
    1337(e): The K Weakest Rows in a Matrix
    1389(e): Create Target Array in the Given Order
    1533(m): Find the Index of the Large Integer
    1539(e): Kth Missing Positive Number
    1608(e): Special Array With X Elements Greater Than or Equal X
    1855(m): Maximum Distance Between a Pair of Values
    1898(m): Maximum Number of Removable Characters
    1901(m): Find a Peak Element II
    1906(m): Minimum Absolute Difference Queries
    2080(m): Range Frequency Queries
    2187(m): Minimum Time to Complete Trips

--- Divide and Conquer
    0004(h): Median of Two Sorted Arrays
    0014(e): Longest Common Prefix
    0023(h): Merge k Sorted Lists
    0105(m): Construct Binary Tree from Preorder and Inorder Traversal
    0106(m): Construct Binary Tree from Inorder and Postorder Traversal 
    0108(e): Convert Sorted A
    0109(m): Convert Sorted List to Binary Search Tree
    0148(m): Sort List
    0179(m): Largest Number
    0215(m): Kth Largest Element in an Array
    0315(h): Count of Smaller Numbers After Self
    0327(h): Count of Range Sum
    0427(m): Construct Quad Tree
    0493(h): Reverse Pairs
    0654(m): Maximum Binary Tree
    0759(h): Employee Free Time
    0912(m): Sort an Array

--- Two Pointers:
    0001(e): Two Sum
    0003(m): Longest Substring Without Repeating Characters
    0004(h): Median of Two Sorted Arrays
    0005(m): Longest Palindromic Substring 
    0009(e): Palindrome Number 
    0011(m): Container With Most Water
    0015(m): 3Sum
    0016(m): 3Sum Closest
    0018(m): 4Sum
    0019(m): Remove Nth Node From End of List
    0042(h): Trapping Rain Water
    0058(e): Length of Last Word
    0075(m): Sort Colors
    0076(h): Minimum Window Substring
    0080(m): Remove Duplicates from Sorted Array II
    0088(e): Merge Sorted Array
    0109(m): Convert Sorted List to Binary Search Tree
    0125(e): Valid Palindrome
    0141(e): Linked List Cycle
    0142(m): Linked List Cycle II
    0143(m): Reorder List
    0148(m): Sort List
    0151(m): Reverse Words in a String
    0159(m): Longest Substring with At Most Two Distinct Characters
    0160(e): Intersection of Two Linked Lists
    0161(m): One Edit Distance
    0165(m): Compare Version Numbers
    0167(e): Two Sum II - Input array is sorted
    0170(e): Two Sum III - Data structure design
    0186(m): Reverse Words in a String II
    0189(m): Rotate Array
    0202(e): Happy Number
    0209(m): Minimum Size Subarray Sum
    0219(e): Contains Duplicate II
    0234(e): Palindrome Linked List
    0238(m): Product of Array Except Self
    0239(h): Sliding Window Maximum
    0243(e): Shortest Word Distance
    0244(m): Shortest Word Distance II
    0245(m): Shortest Word Distance III
    0246(e): Strobogrammatic Number
    0247(m): Strobogrammatic Number II
    0248(h): Strobogrammatic Number III
    0251(m): Flatten 2D Vector
    0253(m): Meeting Rooms II
    0259(m): 3Sum Smaller
    0272(h): Closest Binary Search Tree Value II
    0283(e): Move Zeroes
    0287(m): Find the Duplicate Number
    0301(h): Remove Invalid Parentheses
    0340(m): Longest Substring with At Most K Distinct Characters
    0344(e): Reverse String
    0345(e): Reverse Vowels of a String
    0349(e): Intersection of Two Arrays
    0350(e): Intersection of Two Arrays II
    0360(m): Sort Transformed Array
    0392(e): Is Subsequence
    0395(m): Longest Substring with At Least K Repeating Characters
    0408(e): Valid Word Abbreviation
    0413(m): Arithmetic Slices
    0424(m): Longest Repeating Character Replacement
    0438(m): Find All Anagrams in a String
    0443(m): String Compression
    0455(e): Assign Cookies
    0457(m): Circular Array Loop
    0459(e): Repeated Substring Pattern
    0475(m): Heaters
    0486(m): Predict the Winner
    0487(m): Max Consecutive Ones II
    0524(m): Longest Word in Dictionary through Deleting
    0541(e): Reverse String II
    0556(m): Next Greater Element III
    0557(e): Reverse Words in a String III
    0567(m): Permutation in String 
    0581(m): Shortest Unsorted Continuous Subarray
    0594(e): Longest Harmonious Subsequence
    0611(m): Valid Triangle Number
    0616(m): Add Bold Tag in String
    0622(m): Design Circular Queue
    0633(m): Sum of Square Numbers
    0641(m): Design Circular Deque
    0647(m): Palindromic Substrings
    0653(e): Two Sum IV - Input is a BST
    0678(m): Valid Parenthesis String
    0680(e): Valid Palindrome II
    0696(e): Count Binary Substrings
    0713(m): Subarray Product Less Than K
    0734(e): Sentence Similarity
    0758(m): Bold Words in String
    0763(m): Partition Labels
    0769(m): Max Chunks To Make Sorted
    0777(m): Swap Adjacent in LR String
    0792(m): Number of Matching Subsequences
    0809(m): Expressive Words
    0821(e): Shortest Distance to a Character
    0830(e): Positions of Large Groups
    0838(m): Push Dominoes
    0844(e): Backspace String Compare
    0845(m): Longest Mountain in Array
    0876(e): Middle of the Linked List
    0881(m): Boats to Save People 
    0904(m): Fruit Into Baskets
    0905(e): Sort Array By Parity
    0917(e): Reverse Only Letters
    0922(e): Sort Array By Parity II
    0923(m): 3Sum With Multiplicity
    0925(e): Long Pressed Name
    0930(m): Binary Subarrays With Sum
    0942(e): DI String Match
    0946(m): Validate Stack Sequences
    0953(e): Verifying an Alien Dictionary
    0977(e): Squares of a Sorted Array
    0986(m): Interval List Intersections
    0992(h): Subarrays with K Different Integers
    1004(m): Max Consecutive Ones III
    1031(m): Maximum Sum of Two Non-Overlapping Subarrays
    1051(e): Height Checker
    1052(m): Grumpy Bookstore Owner
    1055(m): Shortest Way to Form String
    1089(e): Duplicate Zeros
    1099(e): Two Sum Less Than K
    1100(m): Find K-Length Substrings With No Repeated Characters
    1151(m): Minimum Swaps to Group All 1's Together
    1163(h): Last Substring in Lexicographical Order
    1176(e): Diet Plan Performance
    1180(e): Count Substrings with Only One Distinct Letter
    1190(m): Reverse Substrings Between Each Pair of Parentheses
    1213(e): Intersection of Three Sorted Arrays
    1214(m): Two Sum BSTs
    1229(m): Meeting Scheduler
    1234(m): Replace the Substring for Balanced String
    1248(m): Count Number of Nice Subarrays
    1358(m): Number of Substrings Containing All Three Characters
    1385(e): Find the Distance Value Between Two Arrays
    1423(m): Maximum Points You Can Obtain from Cards
    1456(m): Maximum Number of Vowels in a Substring of Given Length
    1470(e): Shuffle the Array
    1471(m): The k Strongest Values in an Array
    1477(m): Find Two Non-overlapping Sub-arrays Each With Target Sum\
    1493(m): Longest Subarray of 1's After Deleting One Element
    1498(m): Number of Subsequences That Satisfy the Given Sum Condition
    1544(e): Make The String Great
    1566(e): Detect Pattern of Length M Repeated K or More Times
    1567(m): Maximum Length of Subarray With Positive Product
    1570(m): Dot Product of Two Sparse Vectors
    1616(m): Split Two Strings to Make Palindrome
    1662(e): Check If Two String Arrays are Equivalent
    1679(m): Max Number of K-Sum Pairs
    1695(m): Maximum Erasure Value
    1696(m): Jump Game VI
    1700(e): Number of Students Unable to Eat Lunch
    1708(e): Largest Subarray Length K
    1754(m): Largest Merge Of Two Strings
    1764(m): Form Array by Concatenating Subarrays of Another Array
    1768(e): Merge Strings Alternately
    1769(m): Minimum Number of Operations to Move All Balls to Each Box
    1800(e): Maximum Ascending Subarray Sum
    1805(e): Number of Different Integers in a String
    1826(e): Faulty Sensor
    1838(m): Frequency of the Most Frequent Element
    1839(m): Longest Substring Of All Vowels in Order
    1848(e): Minimum Distance to the Target Element
    1850(m): Minimum Adjacent Swaps to Reach the Kth Smallest Number
    1855(m): Maximum Distance Between a Pair of Values
    1861(m): Rotating the Box
    1868(m): Product of Two Run-Length Encoded Arrays
    1869(e): Longer Contiguous Segments of Ones than Zeros
    1877(m): Minimize Maximum Pair Sum in Array
    1885(m): Count Pairs in Two Arrays
    1920(e): Build Array from Permutation
    1963(m): Minimum Number of Swaps to Make the String Balanced
    2037(e): Minimum Number of Moves to Seat Everyone
    2062(e): Count Vowel Substrings of a String
    2067(m): Number of Equal Count Substrings
    2095(m): Delete the Middle Node of a Linked List
    2108(e): Find First Palindromic String in the Array
    2129(e): Capitalize the Title
    2130(m): Maximum Twin Sum of a Linked List
    2134(m): Minimum Swaps to Group All 1's Together II
    2149(m): Rearrange Array Elements by Sign
    2155(m): All Divisions With the Highest Score of a Binary Array
    2156(h): Find Substring With Given Hash Value
    2161(m): Partition Array According to Given Pivot

--- Quick Select:
    0215(m): Kth Largest Element in an Array
    0378(m): Kth Smallest Element in a Sorted Matrix
    0462(m): Minimum Moves to Equal Array Elements II
    0973(m): K Closest Points to Origin
    1005(e): Maximize Sum Of Array After K Negations
    1387(m): Sort Integers by The Power Value
    1985(m): Find the Kth Largest Integer in the Array
    2033(m): Minimum Operations to Make a Uni-Value Grid
    2098(m): Subsequence of Size K With the Largest Even Sum
    2099(e): Find Subsequence of Length K With the Largest Sum

--- Heap:
    0215(m): Kth Largest Element in an Array
    0295(h): Find Median from Data Stream
    0347(m): Top K Frequent Elements
    0373(m): Find K Pairs with Smallest Sums
    0378(m): Kth Smallest Element in a Sorted Matrix
    0407(h): Trapping Rain Water II
    0451(m): Sort Characters By Frequency
    0480(h): Sliding Window Median
    0505(m): The Maze II
    0692(m): Top K Frequent Words
    0703(e): Kth Largest Element in a Stream
    0743(m): Network Delay Time
    0787(m): Cheapest Flights Within K Stops
    0847(h): Shortest Path Visiting All Nodes
    0864(h): Shortest Path to Get All Keys
    0973(m): K Closest Points to Origin
    1046(e): Last Stone Weight
    1090(m): Largest Values From Labels
    1102(m): Path With Maximum Minimum Value
    1168(h): Optimize Water Distribution in a Village
    1167(m): Minimum Cost to Connect Sticks
    1293(h): Shortest Path in a Grid with Obstacles Elimination
    1329(m): Sort the Matrix Diagonally
    1337(e): The K Weakest Rows in a Matrix
    1338(m): Reduce Array Size to The Half
    1353(m): Maximum Number of Events That Can Be Attended
    1368(h): Minimum Cost to Make at Least One Valid Path in a Grid
    1425(h): Constrained Subsequence Sum
    1481(m): Least Number of Unique Integers after K Removals
    1584(m): Min Cost to Connect All Points
    1619(e): Mean of Array After Removing Some Elements
    1631(m): Path With Minimum Effort
    1642(m): Furthest Building You Can Reach
    1775(m): Equal Sum Arrays With Minimum Number of Operations
    1810(m): Minimum Path Cost in a Hidden Grid
    1824(m): Minimum Sideway Jumps
    1834(m): Single-Threaded CPU
    1845(m): Seat Reservation Manager
    2093(m): Minimum Cost to Reach City With Discounts
    2099(e): Find Subsequence of Length K With the Largest Sum
    2163(h): Minimum Difference in Sums After Removal of Elements
    2182(m): Construct String With Repeat Limit

--- Bucket Sort:
    0347(m): Top K Frequent Elements
    0383(e): Ransom Note
    0387(e): First Unique Character in a String
    0451(m): Sort Characters By Frequency
    0539(m): Minimum Time Difference
    0561(e): Array Partition I
    0692(m): Top K Frequent Words
    0767(m): Reorganize String
    0771(e): Jewels and Stones
    0791(m): Custom Sort String
    0914(e): X of a Kind in a Deck of Cards
    0923(m): 3Sum With Multiplicity
    1002(e): Find Common Characters
    1051(e): Height Checker
    1057(m): Campus Bikes
    1086(e): High Five 
    1094(m): Car Pooling
    1196(e): How Many Apples Can You Put into the Basket
    1122(e): Relative Sort Array
    1133(e): Largest Unique Number
    1160(e): Find Words That Can Be Formed by Characters
    1170(m): Compare Strings by Frequency of the Smallest Character
    1189(e): Maximum Number of Balloons
    1200(e): Minimum Absolute Difference
    1337(e): The K Weakest Rows in a Matrix
    1338(m): Reduce Array Size to The Half
    1347(m): Minimum Number of Steps to Make Two Strings Anagram
    1365(e): How Many Numbers Are Smaller Than the Current Number
    1366(m): Rank Teams by Votes
    1370(e): Increasing Decreasing String
    1394(e): Find Lucky Integer in an Array
    1403(e): Minimum Subsequence in Non-Increasing Order
    1433(m): Check If a String Can Break Another String
    1460(e): Make Two Arrays Equal by Reversing Sub-arrays
    1481(m): Least Number of Unique Integers after K Removals
    1497(m): Check If Array Pairs Are Divisible by k
    1519(m): Number of Nodes in the Sub-Tree With the Same Label
    1636(e): Sort Array by Increasing Frequency
    1657(m): Determine if Two Strings Are Close
    1700(e): Number of Students Unable to Eat Lunch
    1748(e): Sum of Unique Elements
    1775(m): Equal Sum Arrays With Minimum Number of Operations
    1814(m): Count Nice Pairs in an Array
    1854(e): Maximum Population Year
    1874(m): Minimize Product Sum of Two Arrays
    1897(e): Redistribute Characters to Make All Strings Equal
    1941(e): Check if All Characters Have Equal Number of Occurrences
    1943(m): Describe the Painting
    2006(e): Count Number of Pairs With Absolute Difference K
    2008(m): Maximum Earnings From Taxi
    2037(e): Minimum Number of Moves to Seat Everyone
    2067(m): Number of Equal Count Substrings
    2068(e): Check Whether Two Strings are Almost Equivalent
    2089(e): Find Target Indices After Sorting Array
    2144(e): Minimum Cost of Buying Candies With Discount
    2150(m): Find All Lonely Numbers in the Array
    2154(e): Keep Multiplying Found Values by Two
    2168(m): Unique Substrings With Equal Digit Frequency
    2171(m): Removing Minimum Number of Magic Beans
    2182(m): Construct String With Repeat Limit
    2186(m): Minimum Number of Steps to Make Two Strings Anagram II

--- Union Find:
    0200(m): Number of Islands
    0261(m): Graph Valid Tree
    0305(h): Number of Islands II
    0323(m): Number of Connected Components in an Undirected Graph
    0399(m): Evaluate Division
    0547(m): Number of Provinces
    0684(m): Redundant Connection
    0685(h): Redundant Connection II
    0695(m): Max Area of Island
    0721(m): Accounts Merge 
    0737(m): Sentence Similarity II
    0765(h): Couples Holding Hands
    0785(m): Is Graph Bipartite?
    0886(m): Possible Bipartition
    0924(h): Minimize Malware Spread
    0947(m): Most Stones Removed with Same Row or Column 
    0959(m): Regions Cut By Slashes
    1061(m): Lexicographically Smallest Equivalent String
    1101(m): The Earliest Moment When Everyone Become Friends
    1168(h): Optimize Water Distribution in a Village
    1202(m): Smallest String With Swaps 
    1135(m): Connecting Cities With Minimum Cost
    1319(m): Number of Operations to Make Network Connected
    1584(m): Min Cost to Connect All Points
    1559(m): Detect Cycles in 2D Grid
    1722(m): Minimize Hamming Distance After Swap Operations
    1971(e): Find if Path Exists in Graph
    2157(h): Groups of Strings

--- Stack:
    0020(e): Valid Parentheses 
    0032(h): Longest Valid Parentheses
    0042(h): Trapping Rain Water
    0071(m): Simplify Path
    0084(h): Largest Rectangle in Histogram
    0085(h): Maximal Rectangle
    0094(e): Binary Tree Inorder Traversal
    0105(m): Construct Binary Tree from Preorder and Inorder Traversal
    0106(m): Construct Binary Tree from Inorder and Postorder Traversal 
    0144(e): Binary Tree Preorder Traversal
    0145(e): Binary Tree Postorder Traversal
    0150(m): Evaluate Reverse Polish Notation
    0155(e): Min Stack
    0173(m): Binary Search Tree Iterator
    0224(h): Basic Calculator
    0225(e): Implement Stack using Queues
    0227(m): Basic Calculator II
    0232(e): Implement Queue using Stacks
    0255(m): Verify Preorder Sequence in Binary Search Tree
    0272(h): Closest Binary Search Tree Value II
    0316(m): Remove Duplicate Letters
    0332(m): Reconstruct Itinerary
    0341(m): Flatten Nested List Iterator
    0388(m): Longest Absolute File Path
    0394(m): Decode String
    0402(m): Remove K Digits
    0445(m): Add Two Numbers II
    0449(m): Serialize and Deserialize BST
    0456(m): 132 Pattern
    0484(m): Find Permutation
    0496(e): Next Greater Element I
    0503(m): Next Greater Element II
    0536(m): Construct Binary Tree from String
    0589(e): N-ary Tree Preorder Traversal
    0590(e): N-ary Tree Postorder Traversal
    0636(m): Exclusive Time of Functions 
    0653(e): Two Sum IV - Input is a BST
    0654(m): Maximum Binary Tree
    0682(e): Baseball Game
    0716(e): Max Stack
    0726(h): Number of Atoms
    0735(m): Asteroid Collision
    0739(m): Daily Temperatures
    0768(h): Max Chunks To Make Sorted II
    0772(h): Basic Calculator III
    0844(e): Backspace String Compare
    0856(m): Score of Parentheses
    0889(m): Construct Binary Tree from Preorder and Postorder Traversal
    0895(h): Maximum Frequency Stack
    0897(e): Increasing Order Search Tree
    0901(m): Online Stock Span
    0907(m): Sum of Subarray Minimums
    0921(m): Minimum Add to Make Parentheses Valid
    0946(m): Validate Stack Sequences
    0977(e): Squares of a Sorted Array
    1003(m): Check If Word Is Valid After Substitutions
    1008(m): Construct Binary Search Tree from Preorder Traversal
    1019(m): Next Greater Node In Linked List
    1021(e): Remove Outermost Parentheses
    1028(h): Recover a Tree From Preorder Traversal
    1038(m): Binary Search Tree to Greater Sum Tree
    1047(e): Remove All Adjacent Duplicates In String
    1063(h): Number of Valid Subarrays
    1081(m): Smallest Subsequence of Distinct Characters
    1111(m): Maximum Nesting Depth of Two Valid Parentheses Strings
    1130(m): Minimum Cost Tree From Leaf Values
    1190(m): Reverse Substrings Between Each Pair of Parentheses
    1209(m): Remove All Adjacent Duplicates in String II
    1249(m): Minimum Remove to Make Valid Parentheses
    1305(m): All Elements in Two Binary Search Trees
    1340(h): Jump Game V
    1381(m): Design a Stack With Increment Operation
    1472(m): Design Browser History
    1475(e): Final Prices With a Special Discount in a Shop
    1504(m): Count Submatrices With All Ones
    1541(m): Minimum Insertions to Balance a Parentheses String
    1544(e): Make The String Great
    1586(m): Binary Search Tree Iterator II
    1598(e): Crawler Log Folder
    1614(e): Maximum Nesting Depth of the Parentheses
    1673(m): Find the Most Competitive Subsequence
    1717(m): Maximum Score From Removing Substrings
    1762(m): Buildings With an Ocean View
    1963(m): Minimum Number of Swaps to Make the String Balanced
    2104(m): Sum of Subarray Ranges
    2130(m): Maximum Twin Sum of a Linked List

--- Queue:
    0017(m): Letter Combinations of a Phone Number
    0100(e): Same Tree
    0101(e): Symmetric Tree
    0102(m): Binary Tree Level Order Traversal 
    0103(m): Binary Tree Zigzag Level Order Traversal
    0107(m): Binary Tree Level Order Traversal II
    0126(h): Word Ladder II
    0127(h): Word Ladder
    0199(m): Binary Tree Right Side View
    0200(m): Number of Islands
    0207(m): Course Schedule
    0210(m): Course Schedule II
    0225(e): Implement Stack using Queues
    0232(e): Implement Queue using Stacks
    0239(h): Sliding Window Maximum
    0254(m): Factor Combinations
    0261(m): Graph Valid Tree
    0281(m): Zigzag Iterator
    0286(m): Walls and Gates
    0301(h): Remove Invalid Parentheses
    0310(m): Minimum Height Trees
    0314(m): Binary Tree Vertical Order Traversal
    0317(h): Shortest Distance from All Buildings
    0329(h): Longest Increasing Path in a Matrix
    0346(e): Moving Average from Data Stream
    0359(e): Logger Rate Limiter
    0362(m): Design Hit Counter
    0417(m): Pacific Atlantic Water Flow
    0429(m): N-ary Tree Level Order Traversal
    0433(m): Minimum Genetic Mutation
    0449(m): Serialize and Deserialize BST
    0487(m): Max Consecutive Ones II
    0490(m): The Maze
    0505(m): The Maze II
    0513(m): Find Bottom Left Tree Value
    0515(m): Find Largest Value in Each Tree Row
    0529(m): Minesweeper
    0582(m): Kill Process
    0594(e): Longest Harmonious Subsequence
    0622(m): Design Circular Queue
    0623(m): Add One Row to Tree
    0641(m): Design Circular Deque
    0637(e): Average of Levels in Binary Tree
    0662(m): Maximum Width of Binary Tree
    0684(m): Redundant Connection
    0690(e): Employee Importance
    0721(m): Accounts Merge 
    0733(e): Flood Fill
    0742(m): Closest Leaf in a Binary Tree
    0743(m): Network Delay Time
    0752(m): Open the Lock
    0784(m): Letter Case Permutation
    0785(m): Is Graph Bipartite?
    0797(m): All Paths From Source to Target
    0841(m): Keys and Rooms
    0847(h): Shortest Path Visiting All Nodes
    0851(m): Loud and Rich 
    0862(h): Shortest Subarray with Sum at Least K
    0863(m): All Nodes Distance K in Binary Tree
    0864(h): Shortest Path to Get All Keys
    0886(m): Possible Bipartition
    0909(m): Snakes and Ladders
    0919(m): Complete Binary Tree Inserter
    0933(e): Number of Recent Calls
    0934(m): Shortest Bridge
    0950(m): Reveal Cards In Increasing Order
    0958(m): Check Completeness of a Binary Tree
    0987(h): Vertical Order Traversal of a Binary Tree
    0994(m): Rotting Oranges
    1030(e): Matrix Cells in Distance Order
    1091(m): Shortest Path in Binary Matrix
    1102(m): Path With Maximum Minimum Value
    1129(m): Shortest Path with Alternating Colors 
    1136(m): Parallel Courses
    1161(m): Maximum Level Sum of a Binary Tree
    1162(m): As Far from Land as Possible
    1197(m): Minimum Knight Moves
    1245(m): Tree Diameter
    1248(m): Count Number of Nice Subarrays
    1293(h): Shortest Path in a Grid with Obstacles Elimination
    1302(m): Deepest Leaves Sum
    1306(m): Jump Game III
    1311(m): Get Watched Videos by Your Friends
    1345(h): Jump Game IV
    1361(m): Validate Binary Tree Nodes
    1368(h): Minimum Cost to Make at Least One Valid Path in a Grid
    1376(m): Time Needed to Inform All Employees
    1391(m): Check if There is a Valid Path in a Grid
    1425(h): Constrained Subsequence Sum
    1429(m): First Unique Number
    1466(m): Reorder Routes to Make All Paths Lead to the City Zero
    1654(m): Minimum Jumps to Reach Home 
    1670(m): Design Front Middle Back Queue
    1696(m): Jump Game VI
    1730(m): Shortest Path to Get Food
    1765(m): Map of Highest Peak
    1778(m): Shortest Path in a Hidden Grid
    1791(e): Find Center of Star Graph
    1824(m): Minimum Sideway Jumps
    1871(m): Jump Game VII
    1926(m): Nearest Exit from Entrance in Maze
    2073(e): Time Needed to Buy Tickets
    2115(m): Find All Possible Recipes from Given Supplies

--- Recursion:
    0017(m): Letter Combinations of a Phone Number
    0022(m): Generate Parentheses
    0039(m): Combination Sum
    0040(m): Combination Sum II
    0046(m): Permutations
    0047(m): Permutations II
    0050(m): Pow(x, n)
    0051(h): N-queens
    0052(h): N-Queens II
    0060(h): Permutation Sequence
    0062(m): Unique Paths
    0063(m): Unique Paths II
    0077(m): Combinations
    0078(m): Subsets
    0079(m): Word Search
    0090(m): Subsets II
    0093(m): Restore IP Addresses
    0094(e): Binary Tree Inorder Traversal
    0095(m): Unique Binary Search Trees II
    0097(m): Interleaving String
    0100(e): Same Tree
    0105(m): Construct Binary Tree from Preorder and Inorder Traversal
    0106(m): Construct Binary Tree from Inorder and Postorder Traversal 
    0108(e): Convert Sorted Array to Binary Search Tree
    0109(m): Convert Sorted List to Binary Search Tree
    0111(e): Minimum Depth of Binary Tree
    0112(e): Path Sum
    0113(m): Path Sum II
    0124(h): Binary Tree Maximum Path Sum
    0126(h): Word Ladder II
    0129(m): Sum Root to Leaf Numbers
    0130(m): Surrounded Regions
    0131(m): Palindrome Partitioning    
    0133(m): Clone Graph
    0144(e): Binary Tree Preorder Traversal
    0145(e): Binary Tree Postorder Traversal
    0156(m): Binary Tree Upside Down
    0199(m): Binary Tree Right Side View
    0200(m): Number of Islands
    0207(m): Course Schedule
    0208(m): Implement Trie (Prefix Tree)
    0210(m): Course Schedule II
    0211(m): Design Add and Search Words Data Structure
    0212(h): Word Search II
    0216(m): Combination Sum III
    0222(m): Count Complete Tree Nodes
    0224(h): Basic Calculator
    0226(e): Invert Binary Tree
    0234(e): Palindrome Linked List
    0236(m): Lowest Common Ancestor of a Binary Tree
    0241(m): Different Ways to Add Parentheses
    0247(m): Strobogrammatic Number II
    0248(h): Strobogrammatic Number III
    0250(m): Count Univalue Subtrees
    0254(m): Factor Combinations
    0257(e): Binary Tree Paths
    0261(m): Graph Valid Tree
    0273(h): Integer to English Words
    0294(m): Flip Game II
    0297(h): Serialize and Deserialize Binary Tree
    0298(m): Binary Tree Longest Consecutive Sequence
    0301(h): Remove Invalid Parentheses
    0306(m): Additive Number
    0307(m): Range Sum Query - Mutable
    0323(m): Number of Connected Components in an Undirected Graph
    0329(h): Longest Increasing Path in a Matrix
    0332(m): Reconstruct Itinerary
    0333(m): Largest BST Subtree
    0337(m): House Robber III
    0339(m): Nested List Weight Sum
    0366(m): Find Leaves of Binary Tree
    0375(m): Guess Number Higher or Lower II
    0377(m): Combination Sum IV
    0394(m): Decode String
    0395(m): Longest Substring with At Least K Repeating Characters
    0399(m): Evaluate Division
    0401(e): Binary Watch
    0403(h): Frog Jump
    0404(e): Sum of Left Leaves
    0427(m): Construct Quad Tree
    0428(h): Serialize and Deserialize N-ary Tree
    0429(m): N-ary Tree Level Order Traversal
    0431(h): Encode N-ary Tree to Binary Tree
    0437(m): Path Sum III
    0445(m): Add Two Numbers II
    0449(m): Serialize and Deserialize BST
    0450(m): Delete Node in a BST
    0472(h): Concatenated Words
    0473(m): Matchsticks to Square
    0486(m): Predict the Winner
    0488(h): Zuma Game
    0489(h): Robot Room Cleaner
    0491(m): Increasing Subsequences
    0494(m): Target Sum
    0508(m): Most Frequent Subtree Sum
    0513(m): Find Bottom Left Tree Value
    0515(m): Find Largest Value in Each Tree Row
    0526(m): Beautiful Arrangement
    0530(e): Minimum Absolute Difference in BST
    0536(m): Construct Binary Tree from String
    0543(e): Diameter of Binary Tree
    0545(m): Boundary of Binary Tree
    0547(m): Number of Provinces
    0549(m): Binary Tree Longest Consecutive Sequence II
    0559(e): Maximum Depth of N-ary Tree
    0563(e): Binary Tree Tilt
    0572(e): Subtree of Another Tree
    0576(m): Out of Boundary Paths
    0582(m): Kill Process
    0589(e): N-ary Tree Preorder Traversal
    0590(e): N-ary Tree Postorder Traversal
    0606(e): Construct String from Binary Tree
    0617(e): Merge Two Binary Trees
    0623(m): Add One Row to Tree
    0638(m): Shopping Offers
    0650(m): 2 Keys Keyboard
    0652(m): Find Duplicate Subtrees
    0653(e): Two Sum IV - Input is a BST
    0654(m): Maximum Binary Tree
    0655(m): Print Binary Tree
    0663(m): Equal Tree Partition
    0671(e): Second Minimum Node In a Binary Tree
    0687(m): Longest Univalue Path
    0694(m): Number of Distinct Islands
    0695(m): Max Area of Island
    0700(e): Search in a Binary Search Tree
    0701(m): Insert into a Binary Search Tree
    0726(h): Number of Atoms
    0733(e): Flood Fill
    0756(m): Pyramid Transition Matrix
    0759(h): Employee Free Time
    0772(h): Basic Calculator III
    0776(m): Split BST
    0784(m): Letter Case Permutation
    0797(m): All Paths From Source to Target
    0802(m): Find Eventual Safe States
    0841(m): Keys and Rooms
    0842(m): Split Array into Fibonacci Sequence
    0851(m): Loud and Rich 
    0863(m): All Nodes Distance K in Binary Tree
    0865(m): Smallest Subtree with all the Deepest Nodes
    0889(m): Construct Binary Tree from Preorder and Postorder Traversal
    0894(m): All Possible Full Binary Trees
    0934(m): Shortest Bridge
    0938(e): Range Sum of BST
    0947(m): Most Stones Removed with Same Row or Column
    0951(m): Flip Equivalent Binary Trees
    0959(m): Regions Cut By Slashes
    0965(e): Univalued Binary Tree
    0971(m): Flip Binary Tree To Match Preorder Traversal
    0979(m): Distribute Coins in Binary Tree
    0980(h): Unique Paths III
    0987(h): Vertical Order Traversal of a Binary Tree
    0988(m): Smallest String Starting From Leaf
    0993(e): Cousins in Binary Tree
    1008(m): Construct Binary Search Tree from Preorder Traversal
    1020(m): Number of Enclaves
    1022(e): Sum of Root To Leaf Binary Numbers
    1025(e): Divisor Game
    1026(m): Maximum Difference Between Node and Ancestor
    1034(m): Coloring A Border
    1038(m): Binary Search Tree to Greater Sum Tree
    1059(m): All Paths from Source Lead to Destination
    1079(m): Letter Tile Possibilities
    1080(m): Insufficient Nodes in Root to Leaf Paths
    1087(m): Brace Expansion
    1101(m): The Earliest Moment When Everyone Become Friends
    1110(m): Delete Nodes And Return Forest
    1120(m): Maximum Average Subtree
    1123(m): Lowest Common Ancestor of Deepest Leaves
    1135(m): Connecting Cities With Minimum Cost
    1145(m): Binary Tree Coloring Game
    1155(m): Number of Dice Rolls With Target Sum
    1192(h): Critical Connections in a Network
    1197(m): Minimum Knight Moves
    1236(m): Web Crawler
    1286(m): Iterator for Combination
    1334(m): Find the City With the Smallest Number of Neighbors at a Threshold Distance
    1340(h): Jump Game V
    1361(m): Validate Binary Tree Nodes
    1376(m): Time Needed to Inform All Employees
    1405(m): Longest Happy String
    1414(m): Find the Minimum Number of Fibonacci Numbers Whose Sum Is K
    1462(m): Course Schedule IV
    1519(m): Number of Nodes in the Sub-Tree With the Same Label
    1559(m): Detect Cycles in 2D Grid
    1666(m): Change the Root of a Binary Tree
    1778(m): Shortest Path in a Hidden Grid
    1804(m): Implement Trie II (Prefix Tree)
    1810(m): Minimum Path Cost in a Hidden Grid
    1905(m): Count Sub Islands
    1947(m): Maximum Compatibility Score Sum
    1959(m): Minimum Total Space Wasted With K Resizing Operations
    1971(e): Find if Path Exists in Graph
    1973(m): Count Nodes Equal to Sum of Descendants
    1993(m): Operations on Tree
    1999(m): Smallest Greater Multiple Made of Two Digits
    2039(m): The Time When the Network Becomes Idle
    2049(m): Count Nodes With the Highest Score
    2061(m): Number of Spaces Cleaning Robot Cleaned
    2101(m): Detonate the Maximum Bombs
    2157(h): Groups of Strings

--- Greedy:
    0045(m): Jump Game II
    0055(m): Jump Game
    0122(e): Best Time to Buy and Sell Stock II
    0134(m): Gas Station
    0179(m): Largest Number
    0265(h): Paint House II
    0277(m): Find the Celebrity
    0280(m): Wiggle Sort
    0316(m): Remove Duplicate Letters
    0334(m): Increasing Triplet Subsequence
    0376(m): Wiggle Subsequence
    0402(m): Remove K Digits
    0406(m): Queue Reconstruction by Height
    0409(e): Longest Palindrome
    0410(h): Split Array Largest Sum
    0435(m): Non-overlapping Intervals
    0452(m): Minimum Number of Arrows to Burst Balloons
    0455(e): Assign Cookies
    0484(m): Find Permutation
    0561(e): Array Partition I
    0575(e): Distribute Candies
    0581(m): Shortest Unsorted Continuous Subarray
    0605(e): Can Place Flowers
    0611(m): Valid Triangle Number
    0621(m): Task Scheduler
    0624(m): Maximum Distance in Arrays 
    0646(m): Maximum Length of Pair Chain
    0659(m): Split Array into Consecutive Subsequences
    0670(m): Maximum Swap
    0678(m): Valid Parenthesis String
    0714(m): Best Time to Buy and Sell Stock with Transaction Fee 
    0738(m): Monotone Increasing Digits
    0765(h): Couples Holding Hands
    0767(m): Reorganize String
    0768(h): Max Chunks To Make Sorted II
    0769(m): Max Chunks To Make Sorted
    0775(m): Global and Local Inversions
    0807(m): Max Increase to Keep City Skyline
    0826(m): Most Profit Assigning Work
    0860(e): Lemonade Change
    0861(m): Score After Flipping Matrix
    0881(m): Boats to Save People 
    0910(m): Smallest Range II
    0921(m): Minimum Add to Make Parentheses Valid
    0926(m): Flip String to Monotone Increasing
    0942(e): DI String Match
    0954(m): Array of Doubled Pairs
    0969(m): Pancake Sorting
    0976(e): Largest Perimeter Triangle
    0991(m): Broken Calculator
    1005(e): Maximize Sum Of Array After K Negations
    1007(m): Minimum Domino Rotations For Equal Row
    1011(m): Capacity To Ship Packages Within D Days
    1013(e): Partition Array Into Three Parts With Equal Sum
    1029(m): Two City Scheduling
    1042(m): Flower Planting With No Adjacent
    1046(e): Last Stone Weight
    1055(m): Shortest Way to Form String
    1057(m): Campus Bikes
    1081(m): Smallest Subsequence of Distinct Characters
    1090(m): Largest Values From Labels
    1196(e): How Many Apples Can You Put into the Basket
    1130(m): Minimum Cost Tree From Leaf Values
    1405(m): Longest Happy String
    1509(m): Minimum Difference Between Largest and Smallest Value in Three Moves
    1529(m): Minimum Suffix Flips
    1561(m): Maximum Number of Coins You Can Get
    1558(m): Minimum Numbers of Function Calls to Make Target Array
    1567(m): Maximum Length of Subarray With Positive Product
    1605(m): Find Valid Matrix Given Row and Column Sums
    1616(m): Split Two Strings to Make Palindrome
    1642(m): Furthest Building You Can Reach
    1647(m): Minimum Deletions to Make Character Frequencies Unique
    1663(m): Smallest String With A Given Numeric Value
    1717(m): Maximum Score From Removing Substrings
    1758(e): Minimum Changes To Make Alternating Binary String
    1762(m): Buildings With an Ocean View
    1764(m): Form Array by Concatenating Subarrays of Another Array
    1769(m): Minimum Number of Operations to Move All Balls to Each Box
    1775(m): Equal Sum Arrays With Minimum Number of Operations
    1780(m): Check if Number is a Sum of Powers of Three
    1798(m): Maximum Number of Consecutive Values You Can Make
    1827(e): Minimum Operations to Make the Array Increasing
    1838(m): Frequency of the Most Frequent Element
    1846(m): Maximum Element After Decreasing and Rearranging
    1850(m): Minimum Adjacent Swaps to Reach the Kth Smallest Number
    1855(m): Maximum Distance Between a Pair of Values
    1874(m): Minimize Product Sum of Two Arrays
    1877(m): Minimize Maximum Pair Sum in Array
    1885(m): Count Pairs in Two Arrays
    1893(e): Check if All the Integers in a Range Are Covered
    1897(e): Redistribute Characters to Make All Strings Equal
    1903(e): Largest Odd Number in String
    1913(e): Maximum Product Difference Between Two Pairs
    1963(m): Minimum Number of Swaps to Make the String Balanced
    1992(m): Find All Groups of Farmland
    2015(m): Average Height of Buildings in Each Segment
    2027(e): Minimum Moves to Convert String
    2028(m): Find Missing Observations
    2033(m): Minimum Operations to Make a Uni-Value Grid
    2037(e): Minimum Number of Moves to Seat Everyone
    2077(m): Paths in Maze That Lead to Same Room
    2078(e): Two Furthest Houses With Different Colors
    2091(m): Removing Minimum and Maximum From Array
    2098(m): Subsequence of Size K With the Largest Even Sum
    2144(e): Minimum Cost of Buying Candies With Discount
    2160(e): Minimum Sum of Four Digit Number After Splitting Digits
    2167(h): Minimum Time to Remove All Cars Containing Illegal Goods
    2170(m): Minimum Operations to Make the Array Alternating
    2171(m): Removing Minimum Number of Magic Beans
    2178(m): Maximum Split of Positive Even Integers
    2182(m): Construct String With Repeat Limit

--- Dynamic Programming:
    0005(m): Longest Palindromic Substring
    0022(m): Generate Parentheses
    0032(h): Longest Valid Parentheses
    0045(m): Jump Game II
    0053(e): Maximum Subarray
    0055(m): Jump Game
    0062(m): Unique Paths
    0063(m): Unique Paths II
    0064(m): Minimum Path Sum 
    0070(e): Climbing Stairs
    0072(h): Edit Distance
    0085(h): Maximal Rectangle
    0091(m): Decode Ways
    0095(m): Unique Binary Search Trees II
    0096(m): Unique Binary Search Trees
    0097(m): Interleaving String
    0118(e): Pascal's Triangle
    0119(e): Pascal's Triangle II
    0120(m): Triangle
    0121(e): Best Time to Buy and Sell Stock
    0122(e): Best Time to Buy and Sell Stock II
    0123(h): Best Time to Buy and Sell Stock III
    0131(m): Palindrome Partitioning
    0139(m): Word Break
    0140(h): Word Break II
    0152(m): Maximum Product Subarray
    0188(h): Best Time to Buy and Sell Stock IV
    0198(m): House Robber
    0213(m): House Robber II
    0221(m): Maximal Square
    0241(m): Different Ways to Add Parentheses
    0254(m): Factor Combinations
    0256(m): Paint House
    0265(h): Paint House II
    0276(m): Paint Fence
    0279(m): Perfect Squares
    0294(m): Flip Game II
    0309(m): Best Time to Buy and Sell Stock with Cooldown
    0322(m): Coin Change
    0337(m): House Robber III
    0338(e): Counting Bits
    0343(m): Integer Break
    0361(m): Bomb Enemy
    0368(m): Largest Divisible Subset
    0375(m): Guess Number Higher or Lower II
    0376(m): Wiggle Subsequence
    0377(m): Combination Sum IV
    0403(h): Frog Jump
    0410(h): Split Array Largest Sum
    0413(m): Arithmetic Slices
    0416(m): Partition Equal Subset Sum
    0464(m): Can I Win
    0472(h): Concatenated Words
    0473(m): Matchsticks to Square
    0474(m): Ones and Zeroes
    0486(m): Predict the Winner
    0494(m): Target Sum
    0509(e): Fibonacci Number
    0516(m): Longest Palindromic Subsequence
    0518(m): Coin Change 2
    0576(m): Out of Boundary Paths
    0583(m): Delete Operation for Two Strings
    0638(m): Shopping Offers
    0647(m): Palindromic Substrings
    0650(m): 2 Keys Keyboard
    0651(m): 4 Keys Keyboard
    0673(m): Number of Longest Increasing Subsequence
    0678(m): Valid Parenthesis String
    0698(m): Partition to K Equal Sum Subsets
    0712(m): Minimum ASCII Delete Sum for Two Strings
    0714(m): Best Time to Buy and Sell Stock with Transaction Fee 
    0718(m): Maximum Length of Repeated Subarray
    0740(m): Delete and Earn
    0746(e): Min Cost Climbing Stairs
    0799(m): Champagne Tower
    0801(h): Minimum Swaps To Make Sequences Increasing
    0823(m): Binary Trees With Factors
    0828(h): Count Unique Characters of All Substrings of a Given String
    0894(m): All Possible Full Binary Trees
    0907(m): Sum of Subarray Minimums
    0915(m): Partition Array into Disjoint Intervals
    0918(m): Maximum Sum Circular Subarray
    0926(m): Flip String to Monotone Increasing
    0931(m): Minimum Falling Path Sum
    0935(m): Knight Dialer
    0978(m): Longest Turbulent Subarray
    0983(m): Minimum Cost For Tickets
    1014(m): Best Sightseeing Pair
    1031(m): Maximum Sum of Two Non-Overlapping Subarrays
    1035(m): Uncrossed Lines
    1043(m): Partition Array for Maximum Sum
    1048(m): Longest String Chain
    1049(m): Last Stone Weight II
    1055(m): Shortest Way to Form String
    1105(m): Filling Bookcase Shelves
    1137(e): N-th Tribonacci Number
    1140(m): Stone Game II
    1143(m): Longest Common Subsequence
    1155(m): Number of Dice Rolls With Target Sum
    1182(m): Shortest Distance to Target Color
    1186(m): Maximum Subarray Sum with One Deletion
    1218(m): Longest Arithmetic Subsequence of Given Difference
    1230(m): Toss Strange Coins
    1235(h): Maximum Profit in Job Scheduling
    1277(m): Count Square Submatrices with All Ones
    1292(m): Maximum Side Length of a Square with Sum Less than or Equal to Threshold
    1314(m): Matrix Block Sum
    1334(m): Find the City With the Smallest Number of Neighbors at a Threshold Distance
    1504(m): Count Submatrices With All Ones
    1524(m): Number of Sub-arrays With Odd Sum
    1525(m): Number of Good Ways to Split a String
    1594(m): Maximum Non Negative Product in a Matrix
    1641(m): Count Sorted Vowel Strings
    1653(m): Minimum Deletions to Make String Balanced
    1664(m): Ways to Make a Fair Array
    1746(m): Maximum Subarray Sum After One Operation
    1824(m): Minimum Sideway Jumps
    1871(m): Jump Game VII
    1911(m): Maximum Alternating Subsequence Sum
    1937(m): Maximum Number of Points with Cost
    1947(m): Maximum Compatibility Score Sum
    1959(m): Minimum Total Space Wasted With K Resizing Operations
    2008(m): Maximum Earnings From Taxi
    2016(e): Maximum Difference Between Increasing Elements
    2036(m): Maximum Alternating Subarray Sum
    2104(m): Sum of Subarray Ranges
    2110(m): Number of Smooth Descent Periods of a Stock
    2152(m): Minimum Number of Lines to Cover Points
    2163(h): Minimum Difference in Sums After Removal of Elements
    2167(h): Minimum Time to Remove All Cars Containing Illegal Goods
    2170(m): Minimum Operations to Make the Array Alternating
    2172(h): Maximum AND Sum of Array
    2188(h): Minimum Time to Finish the Race

--- Sub Series:
    0003(m): Longest Substring Without Repeating Characters
    0005(m): Longest Palindromic Substring 
    0053(e): Maximum Subarray
    0076(h): Minimum Window Substring
    0152(m): Maximum Product Subarray
    0159(m): Longest Substring with At Most Two Distinct Characters
    0209(m): Minimum Size Subarray Sum
    0300(m): Longest Increasing Subsequence
    0325(m): Maximum Size Subarray Sum Equals k
    0340(m): Longest Substring with At Most K Distinct Characters
    0392(e): Is Subsequence
    0395(m): Longest Substring with At Least K Repeating Characters
    0413(m): Arithmetic Slices
    0424(m): Longest Repeating Character Replacement
    0438(m): Find All Anagrams in a String
    0485(e): Max Consecutive Ones
    0487(m): Max Consecutive Ones II
    0523(m): Continuous Subarray Sum
    0524(m): Longest Word in Dictionary through Deleting
    0525(m): Contiguous Array
    0560(m): Subarray Sum Equals K
    0567(m): Permutation in String 
    0581(m): Shortest Unsorted Continuous Subarray
    0594(e): Longest Harmonious Subsequence
    0643(e): Maximum Average Subarray I
    0647(m): Palindromic Substrings
    0659(m): Split Array into Consecutive Subsequences
    0673(m): Number of Longest Increasing Subsequence
    0674(e): Longest Continuous Increasing Subsequence
    0713(m): Subarray Product Less Than K
    0718(m): Maximum Length of Repeated Subarray
    0792(m): Number of Matching Subsequences
    0862(h): Shortest Subarray with Sum at Least K
    0907(m): Sum of Subarray Minimums
    0918(m): Maximum Sum Circular Subarray
    0930(m): Binary Subarrays With Sum
    0974(m): Subarray Sums Divisible by K
    0978(m): Longest Turbulent Subarray
    0992(h): Subarrays with K Different Integers
    1031(m): Maximum Sum of Two Non-Overlapping Subarrays
    1055(m): Shortest Way to Form String
    1063(h): Number of Valid Subarrays
    1186(m): Maximum Subarray Sum with One Deletion
    1493(m): Longest Subarray of 1's After Deleting One Element
    1567(m): Maximum Length of Subarray With Positive Product
    1588(e): Sum of All Odd Length Subarrays
    1630(m): Arithmetic Subarrays
    1746(m): Maximum Subarray Sum After One Operation
    1764(m): Form Array by Concatenating Subarrays of Another Array
    1911(m): Maximum Alternating Subsequence Sum
    2036(m): Maximum Alternating Subarray Sum
    2104(m): Sum of Subarray Ranges
    2167(h): Minimum Time to Remove All Cars Containing Illegal Goods

--- Prefix Sum:
    0209(m): Minimum Size Subarray Sum
    0238(m): Product of Array Except Self
    0303(e): Range Sum Query - Immutable
    0304(m): Range Sum Query 2D - Immutable
    0325(m): Maximum Size Subarray Sum Equals k
    0327(h): Count of Range Sum
    0370(m): Range Addition
    0410(h): Split Array Largest Sum
    0437(m): Path Sum III
    0462(m): Minimum Moves to Equal Array Elements II
    0497(m): Random Point in Non-overlapping Rectangles
    0523(m): Continuous Subarray Sum
    0525(m): Contiguous Array
    0528(m): Random Pick with Weight
    0560(m): Subarray Sum Equals K
    0677(m): Map Sum Pairs
    0724(e): Find Pivot Index
    0862(h): Shortest Subarray with Sum at Least K
    0923(m): 3Sum With Multiplicity
    0930(m): Binary Subarrays With Sum
    0974(m): Subarray Sums Divisible by K
    1004(m): Max Consecutive Ones III
    1010(m): Pairs of Songs With Total Durations Divisible by 60
    1094(m): Car Pooling
    1109(m): Corporate Flight Bookings
    1124(m): Longest Well-Performing Interval
    1128(e): Number of Equivalent Domino Pairs
    1151(m): Minimum Swaps to Group All 1's Together
    1171(m): Remove Zero Sum Consecutive Nodes from Linked List
    1292(m): Maximum Side Length of a Square with Sum Less than or Equal to Threshold
    1314(m): Matrix Block Sum
    1352(m): Product of the Last K Numbers
    1477(m): Find Two Non-overlapping Sub-arrays Each With Target Sum
    1512(m): Number of Good Pairs
    1524(m): Number of Sub-arrays With Odd Sum
    1814(m): Count Nice Pairs in an Array
    1838(m): Frequency of the Most Frequent Element
    1906(m): Minimum Absolute Difference Queries
    1943(m): Describe the Painting
    1991(e): Find the Middle Index in Array
    2006(e): Count Number of Pairs With Absolute Difference K
    2017(m): Grid Game
    2033(m): Minimum Operations to Make a Uni-Value Grid
    2083(m): Substrings That Begin and End With the Same Letter
    2121(m): Intervals Between Identical Elements
    2134(m): Minimum Swaps to Group All 1's Together II
    2176(e): Count Equal and Divisible Pairs in an Array
    2183(h): Count Array Pairs Divisible by K

--- Map:
    0001(e): Two Sum
    0012(m): Integer to Roman
    0013(e): Roman to Integer
    0015(m): 3Sum
    0036(m): Valid Sudoku
    0049(m): Group Anagrams
    0097(m): Interleaving String
    0126(h): Word Ladder II
    0127(h): Word Ladder
    0128(m): Longest Consecutive Sequence
    0133(m): Clone Graph
    0146(m): LRU Cache
    0149(h): Max Points on a Line
    0170(e): Two Sum III - Data structure design
    0187(m): Repeated DNA Sequences
    0205(e): Isomorphic Strings
    0217(e): Contains Duplicate
    0219(e): Contains Duplicate II
    0242(e): Valid Anagram
    0244(m): Shortest Word Distance II
    0249(m): Group Shifted Strings
    0253(m): Meeting Rooms II
    0266(e): Palindrome Permutation
    0273(h): Integer to English Words
    0290(e): Word Pattern
    0294(m): Flip Game II
    0314(m): Binary Tree Vertical Order Traversal
    0316(m): Remove Duplicate Letters
    0323(m): Number of Connected Components in an Undirected Graph
    0325(m): Maximum Size Subarray Sum Equals k
    0329(h): Longest Increasing Path in a Matrix
    0332(m): Reconstruct Itinerary
    0347(m): Top K Frequent Elements
    0348(m): Design Tic-Tac-Toe
    0349(e): Intersection of Two Arrays
    0350(e): Intersection of Two Arrays II
    0356(m): Line Reflection
    0359(e): Logger Rate Limiter
    0361(m): Bomb Enemy
    0362(m): Design Hit Counter
    0375(m): Guess Number Higher or Lower II
    0380(m): Insert Delete GetRandom O(1)
    0381(h): Insert Delete GetRandom O(1) - Duplicates allowed
    0392(e): Is Subsequence
    0399(m): Evaluate Division
    0403(h): Frog Jump
    0407(h): Trapping Rain Water II
    0409(e): Longest Palindrome
    0414(e): Third Maximum Number
    0421(m): Maximum XOR of Two Numbers in an Array
    0433(m): Minimum Genetic Mutation
    0437(m): Path Sum III
    0451(m): Sort Characters By Frequency
    0454(m): 4Sum II
    0460(h): LFU Cache
    0464(m): Can I Win
    0472(h): Concatenated Words
    0473(m): Matchsticks to Square
    0474(m): Ones and Zeroes
    0480(h): Sliding Window Median
    0486(m): Predict the Winner
    0488(h): Zuma Game
    0489(h): Robot Room Cleaner
    0490(m): The Maze
    0494(m): Target Sum
    0496(e): Next Greater Element I
    0500(e): Keyboard Row
    0505(m): The Maze II
    0508(m): Most Frequent Subtree Sum
    0523(m): Continuous Subarray Sum
    0524(m): Longest Word in Dictionary through Deleting
    0525(m): Contiguous Array
    0531(m): Lonely Pixel I
    0532(m): K-diff Pairs in an Array
    0535(m): Encode and Decode TinyURL
    0547(m): Number of Provinces
    0560(m): Subarray Sum Equals K
    0562(m): Longest Line of Consecutive One in Matrix
    0575(e): Distribute Candies
    0576(m): Out of Boundary Paths
    0582(m): Kill Process
    0594(e): Longest Harmonious Subsequence
    0599(e): Minimum Index Sum of Two Lists
    0616(m): Add Bold Tag in String
    0621(m): Task Scheduler
    0648(m): Replace Words
    0652(m): Find Duplicate Subtrees
    0653(e): Two Sum IV - Input is a BST
    0659(m): Split Array into Consecutive Subsequences
    0663(m): Equal Tree Partition
    0673(m): Number of Longest Increasing Subsequence
    0677(m): Map Sum Pairs
    0681(m): Next Closest Time
    0684(m): Redundant Connection
    0690(e): Employee Importance
    0692(m): Top K Frequent Words
    0697(e): Degree of an Array
    0698(m): Partition to K Equal Sum Subsets
    0705(e): Design HashSet
    0706(e): Design HashMap
    0716(e): Max Stack
    0720(m): Longest Word in Dictionary
    0721(m): Accounts Merge 
    0726(h): Number of Atoms
    0729(m): My Calendar I
    0731(m): My Calendar II
    0734(e): Sentence Similarity
    0737(m): Sentence Similarity II
    0740(m): Delete and Earn
    0742(m): Closest Leaf in a Binary Tree
    0743(m): Network Delay Time
    0748(e): Shortest Completing Word
    0752(m): Open the Lock
    0756(m): Pyramid Transition Matrix
    0758(m): Bold Words in String
    0760(e): Find Anagram Mappings
    0763(m): Partition Labels
    0771(e): Jewels and Stones
    0787(m): Cheapest Flights Within K Stops
    0791(m): Custom Sort String
    0792(m): Number of Matching Subsequences
    0804(e): Unique Morse Code Words
    0811(m): Subdomain Visit Count
    0817(m): Linked List Components
    0819(e): Most Common Word
    0820(m): Short Encoding of Words
    0823(m): Binary Trees With Factors
    0826(m): Most Profit Assigning Work
    0847(h): Shortest Path Visiting All Nodes
    0851(m): Loud and Rich 
    0863(m): All Nodes Distance K in Binary Tree
    0864(h): Shortest Path to Get All Keys
    0874(m): Walking Robot Simulation
    0884(e): Uncommon Words from Two Sentences
    0886(m): Possible Bipartition
    0888(e): Fair Candy Swap
    0890(m): Find and Replace Pattern
    0893(m): Groups of Special-Equivalent Strings
    0895(h): Maximum Frequency Stack
    0904(m): Fruit Into Baskets
    0914(e): X of a Kind in a Deck of Cards
    0923(m): 3Sum With Multiplicity
    0924(h): Minimize Malware Spread
    0929(e): Unique Email Addresses
    0939(m): Minimum Area Rectangle
    0947(m): Most Stones Removed with Same Row or Column 
    0953(e): Verifying an Alien Dictionary
    0954(m): Array of Doubled Pairs
    0959(m): Regions Cut By Slashes
    0974(m): Subarray Sums Divisible by K
    0981(m): Time Based Key-Value Store
    0987(h): Vertical Order Traversal of a Binary Tree
    0992(h): Subarrays with K Different Integers
    0997(e): Find the Town Judge
    1002(e): Find Common Characters
    1010(m): Pairs of Songs With Total Durations Divisible by 60
    1048(m): Longest String Chain
    1055(m): Shortest Way to Form String
    1057(m): Campus Bikes
    1059(m): All Paths from Source Lead to Destination
    1072(m): Flip Columns For Maximum Number of Equal Rows
    1079(m): Letter Tile Possibilities
    1081(m): Smallest Subsequence of Distinct Characters
    1086(e): High Five 
    1090(m): Largest Values From Labels
    1094(m): Car Pooling
    1100(m): Find K-Length Substrings With No Repeated Characters
    1102(m): Path With Maximum Minimum Value
    1110(m): Delete Nodes And Return Forest
    1119(e): Remove Vowels from a String
    1122(e): Relative Sort Array
    1124(m): Longest Well-Performing Interval
    1128(e): Number of Equivalent Domino Pairs
    1129(m): Shortest Path with Alternating Colors 
    1133(e): Largest Unique Number
    1136(m): Parallel Courses
    1146(m): Snapshot Array
    1152(m): Analyze User Website Visit Pattern
    1155(m): Number of Dice Rolls With Target Sum
    1160(e): Find Words That Can Be Formed by Characters
    1165(e): Single-Row Keyboard
    1166(m): Design File System
    1168(h): Optimize Water Distribution in a Village
    1169(m): Invalid Transactions
    1170(m): Compare Strings by Frequency of the Smallest Character
    1171(m): Remove Zero Sum Consecutive Nodes from Linked List
    1180(e): Count Substrings with Only One Distinct Letter
    1182(m): Shortest Distance to Target Color
    1189(e): Maximum Number of Balloons
    1190(m): Reverse Substrings Between Each Pair of Parentheses
    1192(h): Critical Connections in a Network
    1196(e): How Many Apples Can You Put into the Basket
    1197(m): Minimum Knight Moves
    1198(m): Find Smallest Common Element in All Rows
    1207(e): Unique Number of Occurrences
    1218(m): Longest Arithmetic Subsequence of Given Difference
    1235(h): Maximum Profit in Job Scheduling
    1244(m): Design A Leaderboard
    1296(m): Divide Array in Sets of K Consecutive Numbers
    1348(m): Tweet Counts Per Frequency
    1368(h): Minimum Cost to Make at Least One Valid Path in a Grid
    1396(m): Design Underground System
    1429(m): First Unique Number
    1436(e): Destination City
    1462(m): Course Schedule IV
    1472(m): Design Browser Historya
    1496(e): Path Crossing
    1519(m): Number of Nodes in the Sub-Tree With the Same Label
    1554(m): Strings Differ by One Character
    1570(m): Dot Product of Two Sparse Vectors
    1583(m): Count Unhappy Friends
    1615(m): Maximal Network Rank
    1630(m): Arithmetic Subarrays
    1640(e): Check Array Formation Through Concatenation
    1660(m): Correct a Binary Tree
    1666(m): Change the Root of a Binary Tree
    1676(m): Lowest Common Ancestor of a Binary Tree IV
    1679(m): Max Number of K-Sum Pairs
    1684(e): Count the Number of Consistent Strings
    1711(m): Count Good Meals
    1743(m): Restore the Array From Adjacent Pairs
    1748(e): Sum of Unique Elements
    1772(m): Sort Features by Popularity
    1775(m): Equal Sum Arrays With Minimum Number of Operations
    1797(m): Design Authentication Manager
    1805(e): Number of Different Integers in a String
    1807(m): Evaluate the Bracket Pairs of a String
    1814(m): Count Nice Pairs in an Array
    1845(m): Seat Reservation Manager
    1858(m): Longest Word With All Prefixes
    1902(m): Depth of BST Given Insertion Order
    1906(m): Minimum Absolute Difference Queries
    1941(e): Check if All Characters Have Equal Number of Occurrences
    1943(m): Describe the Painting
    1947(m): Maximum Compatibility Score Sum
    1985(m): Find the Kth Largest Integer in the Array
    1993(m): Operations on Tree
    2001(m): Number of Pairs of Interchangeable Rectangles
    2006(e): Count Number of Pairs With Absolute Difference K
    2015(m): Average Height of Buildings in Each Segment
    2021(m): Brightest Position on Street
    2032(e): Two Out of Three
    2053(e): Kth Distinct String in an Array
    2068(e): Check Whether Two Strings are Almost Equivalent
    2077(m): Paths in Maze That Lead to Same Room
    2080(m): Range Frequency Queries
    2083(m): Substrings That Begin and End With the Same Letter
    2085(e): Count Common Words With One Occurrence
    2093(m): Minimum Cost to Reach City With Discounts
    2099(e): Find Subsequence of Length K With the Largest Sum
    2101(m): Detonate the Maximum Bombs
    2115(m): Find All Possible Recipes from Given Supplies
    2121(m): Intervals Between Identical Elements
    2133(e): Check if Every Row and Column Contains All Numbers
    2135(m): Count Words Obtained After Adding a Letter
    2152(m): Minimum Number of Lines to Cover Points
    2154(e): Keep Multiplying Found Values by Two
    2166(m): Design Bitset
    2168(m): Unique Substrings With Equal Digit Frequency
    2170(m): Minimum Operations to Make the Array Alternating
    2171(m): Removing Minimum Number of Magic Beans
    2176(e): Count Equal and Divisible Pairs in an Array
    2183(h): Count Array Pairs Divisible by K

--- Design:
    0146(m): LRU Cache
    0155(e): Min Stack
    0170(e): Two Sum III - Data structure design
    0173(m): Binary Search Tree Iterator
    0208(m): Implement Trie (Prefix Tree)
    0211(m): Design Add and Search Words Data Structure
    0225(e): Implement Stack using Queues
    0232(e): Implement Queue using Stacks
    0244(m): Shortest Word Distance II
    0251(m): Flatten 2D Vector
    0271(m): Encode and Decode Strings
    0281(m): Zigzag Iterator
    0284(m): Peeking Iterator
    0295(h): Find Median from Data Stream
    0297(h): Serialize and Deserialize Binary Tree
    0303(e): Range Sum Query - Immutable
    0304(m): Range Sum Query 2D - Immutable
    0307(m): Range Sum Query - Mutable
    0341(m): Flatten Nested List Iterator
    0346(e): Moving Average from Data Stream
    0348(m): Design Tic-Tac-Toe
    0359(e): Logger Rate Limiter
    0362(m): Design Hit Counter
    0380(m): Insert Delete GetRandom O(1)
    0381(h): Insert Delete GetRandom O(1) - Duplicates allowed
    0428(h): Serialize and Deserialize N-ary Tree
    0431(h): Encode N-ary Tree to Binary Tree
    0449(m): Serialize and Deserialize BST
    0460(h): LFU Cache
    0535(m): Encode and Decode TinyURL
    0604(e): Design Compressed String Iterator
    0621(m): Task Scheduler
    0622(m): Design Circular Queue
    0641(m): Design Circular Deque
    0677(m): Map Sum Pairs
    0703(e): Kth Largest Element in a Stream
    0705(e): Design HashSet
    0706(e): Design HashMap
    0707(m): Design Linked List
    0716(e): Max Stack
    0729(m): My Calendar I
    0731(m): My Calendar II
    0745(h): Prefix and Suffix Search
    0895(h): Maximum Frequency Stack
    0901(m): Online Stock Span
    0919(m): Complete Binary Tree Inserter
    0933(e): Number of Recent Calls
    0981(m): Time Based Key-Value Store
    1114(e): Print in Order
    1146(m): Snapshot Array
    1166(m): Design File System
    1188(m): Design Bounded Blocking Queue
    1195(m): Fizz Buzz Multithreaded
    1244(m): Design A Leaderboard
    1261(m): Find Elements in a Contaminated Binary Tree
    1279(e): Traffic Light Controlled Intersection
    1286(m): Iterator for Combination
    1348(m): Tweet Counts Per Frequency
    1352(m): Product of the Last K Numbers
    1381(m): Design a Stack With Increment Operation
    1396(m): Design Underground System
    1429(m): First Unique Number
    1472(m): Design Browser History
    1570(m): Dot Product of Two Sparse Vectors
    1586(m): Binary Search Tree Iterator II
    1600(m): Throne Inheritance
    1603(e): Design Parking System
    1628(m): Design an Expression Tree With Evaluate Function 
    1656(e): Design an Ordered Stream
    1670(m): Design Front Middle Back Queue
    1797(m): Design Authentication Manager
    1804(m): Implement Trie II (Prefix Tree)
    1845(m): Seat Reservation Manager
    1993(m): Operations on Tree
    2080(m): Range Frequency Queries
    2166(m): Design Bitset

--- Linked List:
    0002(m): Add Two Numbers 
    0019(m): Remove Nth Node From End of List
    0021(e): Merge Two Sorted Lists
    0023(h): Merge k Sorted Lists
    0024(m): Swap Nodes in Pairs
    0025(h): Reverse Nodes in k-Group
    0061(m): Rotate List 
    0082(m): Remove Duplicates from Sorted List II
    0083(e): Remove Duplicates from Sorted List 
    0086(m): Partition List
    0092(m): Reverse Linked List II
    0109(m): Convert Sorted List to Binary Search Tree
    0114(m): Flatten Binary Tree to Linked List 
    0116(m): Populating Next Right Pointers in Each Node
    0117(m): Populating Next Right Pointers in Each Node II
    0138(m): Copy List with Random Pointer
    0141(e): Linked List Cycle
    0142(m): Linked List Cycle II
    0143(m): Reorder List
    0146(m): LRU Cache
    0147(m): Insertion Sort List
    0148(m): Sort List
    0160(e): Intersection of Two Linked Lists
    0203(e): Remove Linked List Elements
    0206(e): Reverse Linked List
    0234(e): Palindrome Linked List
    0237(e): Delete Node in a Linked List
    0328(m): Odd Even Linked List
    0369(m): Plus One Linked List
    0382(m): Linked List Random Node
    0406(m): Queue Reconstruction by Height
    0426(m): Convert Binary Search Tree to Sorted Doubly Linked List
    0430(m): Flatten a Multilevel Doubly Linked List
    0445(m): Add Two Numbers II
    0460(h): LFU Cache
    0604(e): Design Compressed String Iterator
    0705(e): Design HashSet
    0706(e): Design HashMap
    0707(m): Design Linked List
    0708(m): Insert into a Sorted Circular Linked List
    0716(e): Max Stack
    0725(m): Split Linked List in Parts
    0817(m): Linked List Components
    0876(e): Middle of the Linked List
    0895(h): Maximum Frequency Stack
    0989(e): Add to Array-Form of Integer
    1019(m): Next Greater Node In Linked Lis
    1171(m): Remove Zero Sum Consecutive Nodes from Linked List
    1265(m): Print Immutable Linked List in Reverse
    1286(m): Iterator for Combination
    1290(e): Convert Binary Number in a Linked List to Integer
    1474(e): Delete N Nodes After M Nodes of a Linked List
    1485(m): Clone Binary Tree With Random Pointer
    1669(m): Merge In Between Linked Lists
    1670(m): Design Front Middle Back Queue
    1721(m): Swapping Nodes in a Linked List
    1823(m): Find the Winner of the Circular Game
    1836(m): Remove Duplicates From an Unsorted Linked List
    2046(m): Sort Linked List Already Sorted Using Absolute Values
    2058(m): Find the Minimum and Maximum Number of Nodes Between Critical Points
    2095(m): Delete the Middle Node of a Linked List
    2130(m): Maximum Twin Sum of a Linked List
    2181(m): Merge Nodes in Between Zeros

--- Duplicate:
    0026(e): Remove Duplicates from Sorted Array
    0080(m): Remove Duplicates from Sorted Array II
    0082(m): Remove Duplicates from Sorted List II
    0083(e): Remove Duplicates from Sorted List 
    0217(e): Contains Duplicate
    0219(e): Contains Duplicate II
    0287(m): Find the Duplicate Number
    0316(m): Remove Duplicate Letters
    0442(m): Find All Duplicates in an Array
    0448(e): Find All Numbers Disappeared in an Array
    0572(e): Subtree of Another Tree
    0645(e): Set Mismatch
    0652(m): Find Duplicate Subtrees

--- Palindrome:
    0005(m): Longest Palindromic Substring 
    0009(e): Palindrome Number 
    0125(e): Valid Palindrome
    0131(m): Palindrome Partitioning
    0234(e): Palindrome Linked List
    0266(e): Palindrome Permutation
    0336(h): Palindrome Pairs
    0409(e): Longest Palindrome
    0516(m): Longest Palindromic Subsequence
    0647(m): Palindromic Substrings
    0680(e): Valid Palindrome II

--- String:
    0003(m): Longest Substring Without Repeating Characters
    0005(m): Longest Palindromic Substring 
    0006(m): ZigZag Conversion
    0008(m): String to Integer (atoi)
    0012(m): Integer to Roman
    0013(e): Roman to Integer
    0014(e): Longest Common Prefix
    0017(m): Letter Combinations of a Phone Number
    0020(e): Valid Parentheses 
    0022(m): Generate Parentheses
    0028(e): Implement strStr()
    0032(h): Longest Valid Parentheses
    0038(m): Count and Say
    0043(m): Multiply Strings
    0049(m): Group Anagrams
    0058(e): Length of Last Word
    0067(e): Add Binary 
    0071(m): Simplify Path
    0072(h): Edit Distance
    0076(h): Minimum Window Substring
    0091(m): Decode Ways
    0093(m): Restore IP Addresses
    0097(m): Interleaving String
    0125(e): Valid Palindrome
    0126(h): Word Ladder II
    0127(h): Word Ladder
    0131(m): Palindrome Partitioning
    0139(m): Word Break
    0140(h): Word Break II
    0151(m): Reverse Words in a String
    0159(m): Longest Substring with At Most Two Distinct Characters
    0161(m): One Edit Distance
    0165(m): Compare Version Numbers
    0168(e): Excel Sheet Column Title
    0171(e): Excel Sheet Column Number
    0179(m): Largest Number
    0186(m): Reverse Words in a String II
    0187(m): Repeated DNA Sequences
    0205(e): Isomorphic Strings
    0224(h): Basic Calculator
    0227(m): Basic Calculator II
    0241(m): Different Ways to Add Parentheses
    0242(e): Valid Anagram
    0243(e): Shortest Word Distance
    0244(m): Shortest Word Distance II
    0245(m): Shortest Word Distance III
    0246(e): Strobogrammatic Number
    0247(m): Strobogrammatic Number II
    0248(h): Strobogrammatic Number III
    0249(m): Group Shifted Strings
    0257(e): Binary Tree Paths
    0266(e): Palindrome Permutation
    0271(m): Encode and Decode Strings
    0273(h): Integer to English Words
    0290(e): Word Pattern
    0293(e): Flip Game
    0297(h): Serialize and Deserialize Binary Tree
    0299(m): Bulls and Cows
    0301(h): Remove Invalid Parentheses
    0306(m): Additive Number
    0331(m): Verify Preorder Serialization of a Binary Tree
    0336(h): Palindrome Pairs
    0340(m): Longest Substring with At Most K Distinct Characters
    0344(e): Reverse String
    0345(e): Reverse Vowels of a String
    0383(e): Ransom Note
    0387(e): First Unique Character in a String
    0388(m): Longest Absolute File Path
    0389(e): Find the Difference
    0392(e): Is Subsequence
    0394(m): Decode String
    0395(m): Longest Substring with At Least K Repeating Characters
    0401(e): Binary Watch
    0402(m): Remove K Digits
    0408(e): Valid Word Abbreviation
    0409(e): Longest Palindrome
    0412(e): Fizz Buzz
    0415(e): Add Strings
    0422(e): Valid Word Square
    0424(m): Longest Repeating Character Replacement
    0428(h): Serialize and Deserialize N-ary Tree
    0433(m): Minimum Genetic Mutation
    0434(e): Number of Segments in a String
    0438(m): Find All Anagrams in a String
    0443(m): String Compression
    0449(m): Serialize and Deserialize BST
    0451(m): Sort Characters By Frequency
    0459(e): Repeated Substring Pattern
    0468(m): Validate IP Address
    0472(h): Concatenated Words
    0474(m): Ones and Zeroes
    0482(e): License Key Formatting
    0488(h): Zuma Game
    0500(e): Keyboard Row
    0506(e): Relative Ranks
    0516(m): Longest Palindromic Subsequence
    0520(e): Detect Capital
    0524(m): Longest Word in Dictionary through Deleting
    0535(m): Encode and Decode TinyURL
    0536(m): Construct Binary Tree from String
    0537(m): Complex Number Multiplication
    0539(m): Minimum Time Difference
    0541(e): Reverse String II
    0556(m): Next Greater Element III
    0557(e): Reverse Words in a String III
    0567(m): Permutation in String 
    0572(e): Subtree of Another Tree
    0583(m): Delete Operation for Two Strings
    0599(e): Minimum Index Sum of Two Lists
    0604(e): Design Compressed String Iterator
    0606(e): Construct String from Binary Tree
    0616(m): Add Bold Tag in String
    0648(m): Replace Words
    0647(m): Palindromic Substrings
    0652(m): Find Duplicate Subtrees
    0657(e): Robot Return to Origin
    0670(m): Maximum Swap
    0677(m): Map Sum Pairs
    0678(m): Valid Parenthesis String
    0680(e): Valid Palindrome II
    0681(m): Next Closest Time
    0682(e): Baseball Game
    0692(m): Top K Frequent Words
    0696(e): Count Binary Substrings
    0709(e): To Lower Case
    0712(m): Minimum ASCII Delete Sum for Two Strings
    0720(m): Longest Word in Dictionary
    0721(m): Accounts Merge 
    0722(m): Remove Comments
    0726(h): Number of Atoms
    0734(e): Sentence Similarity
    0737(m): Sentence Similarity II
    0745(h): Prefix and Suffix Search
    0748(e): Shortest Completing Word
    0752(m): Open the Lock
    0756(m): Pyramid Transition Matrix
    0758(m): Bold Words in String
    0763(m): Partition Labels
    0767(m): Reorganize String
    0771(e): Jewels and Stones
    0772(h): Basic Calculator III
    0777(m): Swap Adjacent in LR String
    0784(m): Letter Case Permutation
    0791(m): Custom Sort String
    0792(m): Number of Matching Subsequences
    0796(e): Rotate String
    0800(e): Similar RGB Color
    0804(e): Unique Morse Code Words
    0809(m): Expressive Words
    0811(m): Subdomain Visit Count
    0819(e): Most Common Word
    0820(m): Short Encoding of Words
    0821(e): Shortest Distance to a Character
    0828(h): Count Unique Characters of All Substrings of a Given String
    0824(e): Goat Latin
    0830(e): Positions of Large Groups
    0838(m): Push Dominoes
    0842(m): Split Array into Fibonacci Sequence
    0844(e): Backspace String Compare
    0848(m): Shifting Letters
    0856(m): Score of Parentheses
    0872(e): Leaf-Similar Trees
    0880(m): Decoded String at Index
    0884(e): Uncommon Words from Two Sentences
    0890(m): Find and Replace Pattern
    0893(m): Groups of Special-Equivalent Strings
    0917(e): Reverse Only Letters
    0921(m): Minimum Add to Make Parentheses Valid
    0925(e): Long Pressed Name
    0926(m): Flip String to Monotone Increasing
    0929(e): Unique Email Addresses
    0937(e): Reorder Data in Log Files
    0942(e): DI String Match
    0944(e): Delete Columns to Make Sorted
    0953(e): Verifying an Alien Dictionary
    0981(m): Time Based Key-Value Store
    0988(m): Smallest String Starting From Leaf
    0989(e): Add to Array-Form of Integer
    1002(e): Find Common Characters
    1003(m): Check If Word Is Valid After Substitutions
    1021(e): Remove Outermost Parentheses
    1028(h): Recover a Tree From Preorder Traversal
    1041(m): Robot Bounded In Circle
    1047(e): Remove All Adjacent Duplicates In String
    1048(m): Longest String Chain
    1055(m): Shortest Way to Form String
    1061(m): Lexicographically Smallest Equivalent String
    1065(e): Index Pairs of a String
    1071(e): Greatest Common Divisor of Strings
    1079(m): Letter Tile Possibilities
    1081(m): Smallest Subsequence of Distinct Characters
    1087(m): Brace Expansion
    1100(m): Find K-Length Substrings With No Repeated Characters
    1108(e): Defanging an IP Address
    1111(m): Maximum Nesting Depth of Two Valid Parentheses Strings
    1119(e): Remove Vowels from a String
    1143(m): Longest Common Subsequence
    1152(m): Analyze User Website Visit Pattern
    1154(e): Day of the Year
    1160(e): Find Words That Can Be Formed by Characters
    1163(h): Last Substring in Lexicographical Order
    1165(e): Single-Row Keyboard
    1166(m): Design File System
    1169(m): Invalid Transactions
    1170(m): Compare Strings by Frequency of the Smallest Character
    1180(e): Count Substrings with Only One Distinct Letter
    1189(e): Maximum Number of Balloons
    1190(m): Reverse Substrings Between Each Pair of Parentheses
    1286(m): Iterator for Combination
    1309(e): Decrypt String from Alphabet to Integer Mapping
    1405(m): Longest Happy String
    1422(e): Maximum Score After Splitting a String
    1446(e): Consecutive Characters
    1447(m): Simplified Fractions
    1456(m): Maximum Number of Vowels in a Substring of Given Length
    1513(m): Number of Substrings With Only 1s
    1525(m): Number of Good Ways to Split a String
    1529(m): Minimum Suffix Flips
    1554(m): Strings Differ by One Character
    1573(m): Number of Ways to Split a String
    1616(m): Split Two Strings to Make Palindrome
    1624(e): Largest Substring Between Two Equal Characters
    1653(m): Minimum Deletions to Make String Balanced
    1662(e): Check If Two String Arrays are Equivalent
    1663(m): Smallest String With A Given Numeric Value
    1678(e): Goal Parser Interpretation
    1684(e): Count the Number of Consistent Strings
    1694(e): Reformat Phone Number
    1698(m): Number of Distinct Substrings in a String
    1704(e): Determine if String Halves Are Alike
    1717(m): Maximum Score From Removing Substrings
    1759(m): Count Number of Homogenous Substrings
    1768(e): Merge Strings Alternately
    1772(m): Sort Features by Popularity
    1773(e): Count Items Matching a Rule
    1790(e): Check if One String Swap Can Make Strings Equal
    1796(e): Second Largest Digit in a String
    1805(e): Number of Different Integers in a String
    1807(m): Evaluate the Bracket Pairs of a String
    1816(e): Truncate Sentence
    1832(e): Check if the Sentence Is Pangram
    1844(e): Replace All Digits with Characters
    1850(m): Minimum Adjacent Swaps to Reach the Kth Smallest Number
    1858(m): Longest Word With All Prefixes
    1859(e): Sorting the Sentence
    1880(e): Check if Word Equals Summation of Two Words
    1898(m): Maximum Number of Removable Characters
    1941(e): Check if All Characters Have Equal Number of Occurrences
    1957(e): Delete Characters to Make Fancy String
    1961(e): Check If String Is a Prefix of Array
    1963(m): Minimum Number of Swaps to Make the String Balanced
    1980(m): Find Unique Binary String
    1985(m): Find the Kth Largest Integer in the Array
    2000(e): Reverse Prefix of Word
    2011(e): Final Value of Variable After Performing Operations
    2027(e): Minimum Moves to Convert String
    2042(e): Check if Numbers Are Ascending in a Sentence
    2053(e): Kth Distinct String in an Array
    2062(e): Count Vowel Substrings of a String
    2067(m): Number of Equal Count Substrings
    2068(e): Check Whether Two Strings are Almost Equivalent
    2083(m): Substrings That Begin and End With the Same Letter
    2085(e): Count Common Words With One Occurrence
    2096(m): Step-By-Step Directions From a Binary Tree Node to Another
    2103(e): Rings and Rods
    2108(e): Find First Palindromic String in the Array
    2114(e): Maximum Number of Words Found in Sentences
    2115(m): Find All Possible Recipes from Given Supplies
    2124(e): Check if All A's Appears Before All B's
    2129(e): Capitalize the Title
    2135(m): Count Words Obtained After Adding a Letter
    2138(e): Divide a String Into Groups of Size k
    2156(h): Find Substring With Given Hash Value
    2157(h): Groups of Strings
    2162(m): Minimum Cost to Set Cooking Time
    2165(m): Smallest Value of the Rearranged Number
    2166(m): Design Bitset
    2167(h): Minimum Time to Remove All Cars Containing Illegal Goods
    2168(m): Unique Substrings With Equal Digit Frequency
    2182(m): Construct String With Repeat Limit
    2185(e): Counting Words With a Given Prefix
    2186(m): Minimum Number of Steps to Make Two Strings Anagram II

--- Array:
    0004(h): Median of Two Sorted Arrays
    0015(m): 3Sum
    0016(m): 3Sum Closest
    0018(m): 4Sum
    0026(e): Remove Duplicates from Sorted Array
    0027(e): Remove Element
    0031(m): Next Permutation
    0033(m): Search in Rotated Sorted Array
    0034(m): Find First and Last Position of Element in Sorted Array
    0035(e): Search Insert Position
    0036(m): Valid Sudoku
    0039(m): Combination Sum
    0040(m): Combination Sum II
    0041(h): First Missing Positive
    0042(h): Trapping Rain Water
    0045(m): Jump Game II
    0046(m): Permutations
    0047(m): Permutations II
    0048(m): Rotate Image
    0051(h): N-queens
    0052(h): N-Queens II
    0053(e): Maximum Subarray
    0054(m): Spiral Matrix
    0055(m): Jump Game
    0056(m): Merge Intervals
    0057(m): Insert Interval
    0059(m): Spiral Matrix II
    0066(e): Plus One
    0073(m): Set Matrix Zeroes
    0074(m): Search a 2D Matrix
    0075(m): Sort Colors
    0077(m): Combinations
    0078(m): Subsets
    0079(m): Word Search
    0080(m): Remove Duplicates from Sorted Array II
    0081(m): Search in Rotated Sorted Array II
    0084(h): Largest Rectangle in Histogram
    0085(h): Maximal Rectangle
    0088(e): Merge Sorted Array
    0090(m): Subsets II
    0108(e): Convert Sorted Array to Binary Search Tree
    0118(e): Pascal's Triangle
    0119(e): Pascal's Triangle II
    0120(m): Triangle
    0121(e): Best Time to Buy and Sell Stock
    0122(e): Best Time to Buy and Sell Stock II
    0123(h): Best Time to Buy and Sell Stock III
    0128(m): Longest Consecutive Sequence
    0130(m): Surrounded Regions
    0134(m): Gas Station
    0136(e): Single Number
    0137(m): Single Number II
    0149(h): Max Points on a Line
    0150(m): Evaluate Reverse Polish Notation
    0152(m): Maximum Product Subarray
    0153(m): Find Minimum in Rotated Sorted Array
    0162(m): Find Peak Element
    0163(e): Missing Ranges
    0167(e): Two Sum II - Input array is sorted
    0169(e): Majority Element
    0170(e): Two Sum III - Data structure design
    0188(h): Best Time to Buy and Sell Stock IV
    0189(m): Rotate Array
    0198(m): House Robber
    0200(m): Number of Islands
    0204(m): Count Primes
    0209(m): Minimum Size Subarray Sum
    0212(h): Word Search II
    0213(m): House Robber II
    0215(m): Kth Largest Element in an Array
    0216(m): Combination Sum III
    0217(e): Contains Duplicate
    0219(e): Contains Duplicate II
    0221(m): Maximal Square
    0228(e): Summary Ranges
    0229(m): Majority Element II
    0238(m): Product of Array Except Self
    0239(h): Sliding Window Maximum
    0240(m): Search a 2D Matrix II
    0243(e): Shortest Word Distance
    0244(m): Shortest Word Distance II
    0245(m): Shortest Word Distance III
    0251(m): Flatten 2D Vector
    0252(e): Meeting Rooms
    0253(m): Meeting Rooms II
    0254(m): Factor Combinations
    0255(m): Verify Preorder Sequence in Binary Search Tree
    0256(m): Paint House
    0259(m): 3Sum Smaller
    0260(m): Single Number III
    0265(h): Paint House II
    0268(e): Missing Number
    0271(m): Encode and Decode Strings
    0280(m): Wiggle Sort
    0281(m): Zigzag Iterator
    0283(e): Move Zeroes
    0284(m): Peeking Iterator
    0286(m): Walls and Gates
    0287(m): Find the Duplicate Number
    0289(m): Game of Life
    0303(e): Range Sum Query - Immutable
    0304(m): Range Sum Query 2D - Immutable
    0305(h): Number of Islands II
    0315(h): Count of Smaller Numbers After Self
    0317(h): Shortest Distance from All Buildings
    0322(m): Coin Change
    0325(m): Maximum Size Subarray Sum Equals k
    0327(h): Count of Range Sum
    0329(h): Longest Increasing Path in a Matrix
    0334(m): Increasing Triplet Subsequence
    0336(h): Palindrome Pairs
    0339(m): Nested List Weight Sum
    0343(m): Integer Break
    0347(m): Top K Frequent Elements
    0348(m): Design Tic-Tac-Toe
    0349(e): Intersection of Two Arrays
    0350(e): Intersection of Two Arrays II
    0354(h): Russian Doll Envelopes
    0356(m): Line Reflection
    0360(m): Sort Transformed Array
    0361(m): Bomb Enemy
    0362(m): Design Hit Counter
    0364(m): Nested List Weight Sum II
    0368(m): Largest Divisible Subset
    0370(m): Range Addition
    0373(m): Find K Pairs with Smallest Sums
    0375(m): Guess Number Higher or Lower II
    0376(m): Wiggle Subsequence
    0377(m): Combination Sum IV
    0378(m): Kth Smallest Element in a Sorted Matrix
    0384(m): Shuffle an Array
    0386(m): Lexicographical Numbers
    0398(m): Random Pick Index
    0399(m): Evaluate Division
    0401(e): Binary Watch
    0403(h): Frog Jump
    0406(m): Queue Reconstruction by Height
    0407(h): Trapping Rain Water II
    0410(h): Split Array Largest Sum
    0414(e): Third Maximum Number
    0416(m): Partition Equal Subset Sum
    0419(m): Battleships in a Board
    0421(m): Maximum XOR of Two Numbers in an Array
    0422(e): Valid Word Square
    0427(m): Construct Quad Tree
    0435(m): Non-overlapping Intervals
    0442(m): Find All Duplicates in an Array
    0448(e): Find All Numbers Disappeared in an Array
    0452(m): Minimum Number of Arrows to Burst Balloons
    0453(e): Minimum Moves to Equal Array Elements
    0454(m): 4Sum II
    0455(e): Assign Cookies
    0456(m): 132 Pattern
    0457(m): Circular Array Loop
    0462(m): Minimum Moves to Equal Array Elements II
    0463(e): Island Perimeter
    0473(m): Matchsticks to Square
    0474(m): Ones and Zeroes
    0475(m): Heaters
    0477(m): Total Hamming Distance
    0480(h): Sliding Window Median
    0484(m): Find Permutation
    0486(m): Predict the Winner
    0490(m): The Maze
    0491(m): Increasing Subsequences
    0493(h): Reverse Pairs
    0494(m): Target Sum
    0496(e): Next Greater Element I
    0498(m): Diagonal Traverse
    0500(e): Keyboard Row
    0503(m): Next Greater Element II
    0505(m): The Maze II
    0506(e): Relative Ranks
    0518(m): Coin Change 2
    0523(m): Continuous Subarray Sum
    0526(m): Beautiful Arrangement
    0531(m): Lonely Pixel I
    0532(m): K-diff Pairs in an Array
    0539(m): Minimum Time Difference
    0540(m): Single Element in a Sorted Array
    0542(m): 01 Matrix
    0547(m): Number of Provinces
    0560(m): Subarray Sum Equals K
    0561(e): Array Partition I
    0562(m): Longest Line of Consecutive One in Matrix
    0565(m): Array Nesting
    0566(e): Reshape the Matrix
    0575(e): Distribute Candies
    0576(m): Out of Boundary Paths
    0581(m): Shortest Unsorted Continuous Subarray
    0582(m): Kill Process
    0598(e): Range Addition II
    0599(e): Minimum Index Sum of Two Lists
    0605(e): Can Place Flowers
    0611(m): Valid Triangle Number
    0616(m): Add Bold Tag in String
    0621(m): Task Scheduler
    0622(m): Design Circular Queue
    0624(m): Maximum Distance in Arrays 
    0628(e): Maximum Product of Three Numbers
    0636(m): Exclusive Time of Functions 
    0638(m): Shopping Offers
    0641(m): Design Circular Deque
    0643(e): Maximum Average Subarray I
    0645(e): Set Mismatch
    0646(m): Maximum Length of Pair Chain
    0654(m): Maximum Binary Tree
    0658(m): Find K Closest Elements
    0661(e): Image Smoother
    0665(m): Non-decreasing Array
    0666(m): Path Sum IV
    0682(e): Baseball Game
    0692(m): Top K Frequent Words
    0694(m): Number of Distinct Islands
    0695(m): Max Area of Island
    0697(e): Degree of an Array
    0698(m): Partition to K Equal Sum Subsets
    0702(m): Search in a Sorted Array of Unknown Size
    0704(e): Binary Search
    0705(e): Design HashSet
    0706(e): Design HashMap
    0713(m): Subarray Product Less Than K
    0714(m): Best Time to Buy and Sell Stock with Transaction Fee 
    0717(e): 1-bit and 2-bit Characters
    0718(m): Maximum Length of Repeated Subarray
    0720(m): Longest Word in Dictionary
    0721(m): Accounts Merge 
    0722(m): Remove Comments
    0723(m): Candy Crush
    0724(e): Find Pivot Index
    0733(e): Flood Fill
    0734(e): Sentence Similarity
    0735(m): Asteroid Collision
    0737(m): Sentence Similarity II
    0739(m): Daily Temperatures
    0740(m): Delete and Earn
    0744(e): Find Smallest Letter Greater Than Target
    0746(e): Min Cost Climbing Stairs
    0747(e): Largest Number At Least Twice of Others
    0748(e): Shortest Completing Word
    0758(m): Bold Words in String
    0760(e): Find Anagram Mappings
    0766(e): Toeplitz Matrix
    0768(h): Max Chunks To Make Sorted II
    0769(m): Max Chunks To Make Sorted
    0775(m): Global and Local Inversions
    0789(m): Escape The Ghosts
    0799(m): Champagne Tower
    0801(h): Minimum Swaps To Make Sequences Increasing
    0804(e): Unique Morse Code Words
    0807(m): Max Increase to Keep City Skyline
    0809(m): Expressive Words
    0811(m): Subdomain Visit Count
    0820(m): Short Encoding of Words
    0821(e): Shortest Distance to a Character
    0823(m): Binary Trees With Factors
    0826(m): Most Profit Assigning Work
    0830(e): Positions of Large Groups
    0832(e): Flipping an Image
    0835(m): Image Overlap
    0840(m): Magic Squares In Grid
    0845(m): Longest Mountain in Array
    0848(m): Shifting Letters
    0849(m): Maximize Distance to Closest Person
    0851(m): Loud and Rich 
    0852(e): Peak Index in a Mountain Array
    0860(e): Lemonade Change
    0861(m): Score After Flipping Matrix
    0862(h): Shortest Subarray with Sum at Least K
    0867(e): Transpose Matrix
    0874(m): Walking Robot Simulation
    0875(m): Koko Eating Bananas
    0881(m): Boats to Save People 
    0885(m): Spiral Matrix III
    0888(e): Fair Candy Swap
    0889(m): Construct Binary Tree from Preorder and Postorder Traversal
    0890(m): Find and Replace Pattern
    0892(e): Surface Area of 3D Shapes
    0893(m): Groups of Special-Equivalent Strings
    0896(e): Monotonic Array
    0904(m): Fruit Into Baskets
    0905(e): Sort Array By Parity
    0907(m): Sum of Subarray Minimums
    0908(e): Smallest Range I
    0909(m): Snakes and Ladders
    0910(m): Smallest Range II
    0912(m): Sort an Array
    0914(e): X of a Kind in a Deck of Cards
    0915(m): Partition Array into Disjoint Intervals
    0918(m): Maximum Sum Circular Subarray
    0922(e): Sort Array By Parity II
    0923(m): 3Sum With Multiplicity
    0924(h): Minimize Malware Spread
    0929(e): Unique Email Addresses
    0930(m): Binary Subarrays With Sum
    0931(m): Minimum Falling Path Sum
    0933(e): Number of Recent Calls
    0934(m): Shortest Bridge
    0937(e): Reorder Data in Log Files
    0939(m): Minimum Area Rectangle
    0941(e): Valid Mountain Array
    0942(e): DI String Match
    0944(e): Delete Columns to Make Sorted
    0946(m): Validate Stack Sequences
    0950(m): Reveal Cards In Increasing Order
    0953(e): Verifying an Alien Dictionary
    0954(m): Array of Doubled Pairs
    0957(m): Prison Cells After N Days
    0959(m): Regions Cut By Slashes
    0961(e): N-Repeated Element in Size 2N Array
    0969(m): Pancake Sorting
    0973(m): K Closest Points to Origin
    0974(m): Subarray Sums Divisible by K
    0976(e): Largest Perimeter Triangle
    0978(m): Longest Turbulent Subarray
    0980(h): Unique Paths III
    0983(m): Minimum Cost For Tickets
    0985(m): Sum of Even Numbers After Queries
    0986(m): Interval List Intersections
    0989(e): Add to Array-Form of Integer
    0992(h): Subarrays with K Different Integers
    0994(m): Rotting Oranges
    0997(e): Find the Town Judge
    0999(e): Available Captures for Rook
    1002(e): Find Common Characters
    1004(m): Max Consecutive Ones III
    1005(e): Maximize Sum Of Array After K Negations
    1007(m): Minimum Domino Rotations For Equal Row
    1008(m): Construct Binary Search Tree from Preorder Traversal
    1010(m): Pairs of Songs With Total Durations Divisible by 60
    1011(m): Capacity To Ship Packages Within D Days
    1013(e): Partition Array Into Three Parts With Equal Sum
    1014(m): Best Sightseeing Pair
    1018(e): Binary Prefix Divisible By 5
    1019(m): Next Greater Node In Linked List
    1020(m): Number of Enclaves
    1029(m): Two City Scheduling
    1030(e): Matrix Cells in Distance Order
    1031(m): Maximum Sum of Two Non-Overlapping Subarrays
    1034(m): Coloring A Border
    1035(m): Uncrossed Lines
    1043(m): Partition Array for Maximum Sum
    1046(e): Last Stone Weight
    1048(m): Longest String Chain
    1049(m): Last Stone Weight II
    1051(e): Height Checker
    1052(m): Grumpy Bookstore Owner
    1057(m): Campus Bikes
    1060(m): Missing Element in Sorted Array
    1063(h): Number of Valid Subarrays
    1064(e): Fixed Point
    1065(e): Index Pairs of a String
    1072(m): Flip Columns For Maximum Number of Equal Rows
    1085(e): Sum of Digits in the Minimum Number
    1086(e): High Five 
    1089(e): Duplicate Zeros
    1090(m): Largest Values From Labels
    1091(m): Shortest Path in Binary Matrix
    1094(m): Car Pooling
    1095(h): Find in Mountain Array
    1099(e): Two Sum Less Than K
    1101(m): The Earliest Moment When Everyone Become Friends
    1102(m): Path With Maximum Minimum Value
    1105(m): Filling Bookcase Shelves
    1109(m): Corporate Flight Bookings
    1122(e): Relative Sort Array
    1124(m): Longest Well-Performing Interval
    1128(e): Number of Equivalent Domino Pairs
    1130(m): Minimum Cost Tree From Leaf Values
    1133(e): Largest Unique Number
    1135(m): Connecting Cities With Minimum Cost
    1137(e): N-th Tribonacci Number
    1140(m): Stone Game II
    1146(m): Snapshot Array
    1150(e): Check If a Number Is Majority Element in a Sorted Array
    1151(m): Minimum Swaps to Group All 1's Together
    1152(m): Analyze User Website Visit Pattern
    1155(m): Number of Dice Rolls With Target Sum
    1160(e): Find Words That Can Be Formed by Characters
    1162(m): As Far from Land as Possible
    1167(m): Minimum Cost to Connect Sticks
    1169(m): Invalid Transactions
    1170(m): Compare Strings by Frequency of the Smallest Character
    1176(e): Diet Plan Performance
    1182(m): Shortest Distance to Target Color
    1184(e): Distance Between Bus Stops
    1186(m): Maximum Subarray Sum with One Deletion
    1192(h): Critical Connections in a Network
    1196(e): How Many Apples Can You Put into the Basket
    1198(m): Find Smallest Common Element in All Rows
    1217(e): Play with Chips
    1218(m): Longest Arithmetic Subsequence of Given Difference
    1221(e): Split a String in Balanced Strings
    1222(m): Queens That Can Attack the King
    1243(e): Array Transformation
    1247(m): Minimum Swaps to Make Strings Equal
    1252(e): Cells with Odd Values in a Matrix
    1260(e): Shift 2D Grid
    1266(e): Minimum Time Visiting All Points
    1271(e): Hexspeak
    1275(e): Find Winner on a Tic Tac Toe Game
    1282(m): Group the People Given the Group Size They Belong To
    1287(e): Element Appearing More Than 25% In Sorted Array
    1288(m): Remove Covered Intervals
    1295(e): Find Numbers with Even Number of Digits
    1299(e): Replace Elements with Greatest Element on Right Side
    1300(m): Sum of Mutated Array Closest to Target
    1304(e): Find N Unique Integers Sum up to Zero
    1313(e): Decompress Run-Length Encoded List
    1331(e): Rank Transform of an Array
    1346(e): Check If N and Its Double Exist
    1351(e): Count Negative Numbers in a Sorted Matrix
    1368(h): Minimum Cost to Make at Least One Valid Path in a Grid
    1375(m): Number of Times Binary String Is Prefix-Aligned
    1380(e): Lucky Numbers in a Matrix 
    1385(e): Find the Distance Value Between Two Arrays
    1387(m): Sort Integers by The Power Value
    1395(m): Count Number of Teams
    1399(e): Count Largest Group
    1408(e): String Matching in an Array
    1413(e): Minimum Value to Get Positive Step by Step Sum
    1427(e): Perform String Shifts
    1428(m): Leftmost Column with at Least a One
    1431(e): Kids With the Greatest Number of Candies
    1437(e): Check If All 1's Are at Least Length K Places Away
    1441(e): Build an Array With Stack Operations
    1471(m): The k Strongest Values in an Array
    1480(e): Running Sum of 1d Array
    1464(e): Maximum Product of Two Elements in an Array
    1491(e): Average Salary Excluding the Minimum and Maximum Salary
    1497(m): Check If Array Pairs Are Divisible by k
    1498(m): Number of Subsequences That Satisfy the Given Sum Condition
    1502(e): Can Make Arithmetic Progression From Sequence
    1504(m): Count Submatrices With All Ones
    1507(e): Reformat Date
    1509(m): Minimum Difference Between Largest and Smallest Value in Three Moves
    1524(m): Number of Sub-arrays With Odd Sum
    1528(e): Shuffle String
    1533(m): Find the Index of the Large Integer
    1550(e): Three Consecutive Odds
    1558(m): Minimum Numbers of Function Calls to Make Target Array
    1559(m): Detect Cycles in 2D Grid
    1561(m): Maximum Number of Coins You Can Get
    1566(e): Detect Pattern of Length M Repeated K or More Times
    1567(m): Maximum Length of Subarray With Positive Product
    1572(e): Matrix Diagonal Sum
    1578(m): Minimum Deletion Cost to Avoid Repeating Letters
    1594(m): Maximum Non Negative Product in a Matrix
    1605(m): Find Valid Matrix Given Row and Column Sums
    1608(e): Special Array With X Elements Greater Than or Equal X
    1619(e): Mean of Array After Removing Some Elements
    1629(e): Slowest Key
    1630(m): Arithmetic Subarrays
    1642(m): Furthest Building You Can Reach
    1646(e): Get Maximum in Generated Array
    1664(m): Ways to Make a Fair Array
    1668(e): Maximum Repeating Substring
    1672(e): Richest Customer Wealth
    1679(m): Max Number of K-Sum Pairs
    1701(m): Average Waiting Time
    1710(e): Maximum Units on a Truck
    1711(m): Count Good Meals
    1720(e): Decode XORed Array
    1722(m): Minimize Hamming Distance After Swap Operations
    1725(e): Number Of Rectangles That Can Form The Largest Square
    1732(e): Find the Highest Altitude
    1736(e): Latest Time by Replacing Hidden Digits
    1743(m): Restore the Array From Adjacent Pairs
    1746(m): Maximum Subarray Sum After One Operation
    1748(e): Sum of Unique Elements
    1752(e): Check if Array Is Sorted and Rotated
    1753(m): Maximum Score From Removing Stones
    1764(m): Form Array by Concatenating Subarrays of Another Array
    1765(m): Map of Highest Peak
    1769(m): Minimum Number of Operations to Move All Balls to Each Box
    1775(m): Equal Sum Arrays With Minimum Number of Operations
    1779(e): Find Nearest Point That Has the Same X or Y Coordinate
    1784(e): Check if Binary String Has at Most One Segment of Ones
    1798(m): Maximum Number of Consecutive Values You Can Make
    1807(m): Evaluate the Bracket Pairs of a String
    1814(m): Count Nice Pairs in an Array
    1823(m): Find the Winner of the Circular Game
    1826(e): Faulty Sensor
    1834(m): Single-Threaded CPU
    1838(m): Frequency of the Most Frequent Element
    1846(m): Maximum Element After Decreasing and Rearranging
    1848(e): Minimum Distance to the Target Element
    1854(e): Maximum Population Year
    1855(m): Maximum Distance Between a Pair of Values
    1858(m): Longest Word With All Prefixes
    1861(m): Rotating the Box
    1868(m): Product of Two Run-Length Encoded Arrays
    1877(m): Minimize Maximum Pair Sum in Array
    1885(m): Count Pairs in Two Arrays
    1886(e): Determine Whether Matrix Can Be Obtained By Rotation
    1898(m): Maximum Number of Removable Characters
    1901(m): Find a Peak Element II
    1905(m): Count Sub Islands
    1906(m): Minimum Absolute Difference Queries
    1908(m): Game of Nim
    1911(m): Maximum Alternating Subsequence Sum
    1913(e): Maximum Product Difference Between Two Pairs
    1920(e): Build Array from Permutation
    1926(m): Nearest Exit from Entrance in Maze
    1929(m): Concatenation of Array
    1937(m): Maximum Number of Points with Cost
    1943(m): Describe the Painting
    1947(m): Maximum Compatibility Score Sum
    1959(m): Minimum Total Space Wasted With K Resizing Operations
    1961(e): Check If String Is a Prefix of Array
    1980(m): Find Unique Binary String
    1985(m): Find the Kth Largest Integer in the Array
    1991(e): Find the Middle Index in Array
    1992(m): Find All Groups of Farmland
    2001(m): Number of Pairs of Interchangeable Rectangles
    2006(e): Count Number of Pairs With Absolute Difference K
    2008(m): Maximum Earnings From Taxi
    2011(e): Final Value of Variable After Performing Operations
    2012(m): Sum of Beauty in the Array
    2015(m): Average Height of Buildings in Each Segment
    2016(e): Maximum Difference Between Increasing Elements
    2017(m): Grid Game
    2021(m): Brightest Position on Street
    2022(e): Convert 1D Array Into 2D Array
    2028(m): Find Missing Observations
    2032(e): Two Out of Three
    2033(m): Minimum Operations to Make a Uni-Value Grid
    2036(m): Maximum Alternating Subarray Sum
    2037(e): Minimum Number of Moves to Seat Everyone
    2053(e): Kth Distinct String in an Array
    2061(m): Number of Spaces Cleaning Robot Cleaned
    2057(e): Smallest Index With Equal Value
    2073(e): Time Needed to Buy Tickets
    2078(e): Two Furthest Houses With Different Colors
    2080(m): Range Frequency Queries
    2085(e): Count Common Words With One Occurrence
    2089(e): Find Target Indices After Sorting Array
    2091(m): Removing Minimum and Maximum From Array
    2098(m): Subsequence of Size K With the Largest Even Sum
    2099(e): Find Subsequence of Length K With the Largest Sum
    2101(m): Detonate the Maximum Bombs
    2104(m): Sum of Subarray Ranges
    2108(e): Find First Palindromic String in the Array
    2110(m): Number of Smooth Descent Periods of a Stock
    2114(e): Maximum Number of Words Found in Sentences
    2115(m): Find All Possible Recipes from Given Supplies
    2121(m): Intervals Between Identical Elements
    2133(e): Check if Every Row and Column Contains All Numbers
    2134(m): Minimum Swaps to Group All 1's Together II
    2135(m): Count Words Obtained After Adding a Letter
    2144(e): Minimum Cost of Buying Candies With Discount
    2148(e): Count Elements With Strictly Smaller and Greater Elements
    2149(m): Rearrange Array Elements by Sign
    2150(m): Find All Lonely Numbers in the Array
    2152(m): Minimum Number of Lines to Cover Points
    2154(e): Keep Multiplying Found Values by Two
    2155(m): All Divisions With the Highest Score of a Binary Array
    2160(e): Minimum Sum of Four Digit Number After Splitting Digits
    2161(m): Partition Array According to Given Pivot
    2163(h): Minimum Difference in Sums After Removal of Elements
    2164(e): Sort Even and Odd Indices Independently
    2170(m): Minimum Operations to Make the Array Alternating
    2171(m): Removing Minimum Number of Magic Beans
    2172(h): Maximum AND Sum of Array
    2176(e): Count Equal and Divisible Pairs in an Array
    2179(h): Count Good Triplets in an Array
    2183(h): Count Array Pairs Divisible by K
    2187(m): Minimum Time to Complete Trips
    2188(h): Minimum Time to Finish the Race

--- Bit Manipulation:
    0067(e): Add Binary 
    0136(e): Single Number
    0137(m): Single Number II
    0187(m): Repeated DNA Sequences
    0190(e): Reverse Bits
    0191(e): Number of 1 Bits
    0201(m): Bitwise AND of Numbers Range
    0231(e): Power of Two
    0260(m): Single Number III
    0268(e): Missing Number
    0289(m): Game of Life
    0326(e): Power of Three
    0338(e): Counting Bits
    0342(e): Power of Four
    0371(e): Sum of Two Integers
    0389(e): Find the Difference
    0401(e): Binary Watch
    0405(e): Convert a Number to Hexadecimal
    0421(m): Maximum XOR of Two Numbers in an Array
    0461(e): Hamming Distance
    0464(m): Can I Win
    0473(m): Matchsticks to Square
    0476(e): Number Complement
    0477(m): Total Hamming Distance
    0661(e): Image Smoother
    0698(m): Partition to K Equal Sum Subsets
    0709(e): To Lower Case
    0847(h): Shortest Path Visiting All Nodes
    0861(m): Score After Flipping Matrix
    0864(h): Shortest Path to Get All Keys
    0868(e): Binary Gap
    1049(m): Last Stone Weight II
    1018(e): Binary Prefix Divisible By 5
    1111(m): Maximum Nesting Depth of Two Valid Parentheses Strings
    1118(e): Number of Days in a Month
    1128(e): Number of Equivalent Domino Pairs
    1286(m): Iterator for Combination
    1290(e): Convert Binary Number in a Linked List to Integer
    1342(e): Number of Steps to Reduce a Number to Zero
    1356(e): Sort Integers by The Number of 1 Bits
    1457(m): Pseudo-Palindromic Paths in a Binary Tree
    1460(e): Make Two Arrays Equal by Reversing Sub-arrays
    1470(e): Shuffle the Array
    1486(e): XOR Operation in an Array
    1506(m): Find Root of N-Ary Tree
    1558(m): Minimum Numbers of Function Calls to Make Target Array
    1711(m): Count Good Meals
    1720(e): Decode XORed Array
    1832(e): Check if the Sentence Is Pangram
    1908(m): Game of Nim
    1947(m): Maximum Compatibility Score Sum
    2103(e): Rings and Rods
    2135(m): Count Words Obtained After Adding a Letter
    2152(m): Minimum Number of Lines to Cover Points
    2157(h): Groups of Strings
    2170(m): Minimum Operations to Make the Array Alternating
    2172(h): Maximum AND Sum of Array

--- Intervals:
    0056(m): Merge Intervals
    0057(m): Insert Interval
    0252(e): Meeting Rooms
    0253(m): Meeting Rooms II
    0370(m): Range Addition
    0435(m): Non-overlapping Intervals
    0452(m): Minimum Number of Arrows to Burst Balloons
    0646(m): Maximum Length of Pair Chain
    0708(m): Insert into a Sorted Circular Linked List
    0729(m): My Calendar I
    0731(m): My Calendar II
    0759(h): Employee Free Time
    0836(e): Rectangle Overlap
    0986(m): Interval List Intersections
    1229(m): Meeting Scheduler
    1272(m): Remove Interval
    1288(m): Remove Covered Intervals
    1450(e): Number of Students Doing Homework at a Given Time
    1573(m): Number of Ways to Split a String
    1701(m): Average Waiting Time
    1834(m): Single-Threaded CPU
    1893(e): Check if All the Integers in a Range Are Covered
    1943(m): Describe the Painting
    2015(m): Average Height of Buildings in Each Segment
    2021(m): Brightest Position on Street

--- Graph:
    0062(m): Unique Paths
    0063(m): Unique Paths II
    0064(m): Minimum Path Sum 
    0085(h): Maximal Rectangle
    0130(m): Surrounded Regions
    0133(m): Clone Graph
    0200(m): Number of Islands
    0207(m): Course Schedule
    0210(m): Course Schedule II
    0221(m): Maximal Square
    0261(m): Graph Valid Tree
    0277(m): Find the Celebrity
    0286(m): Walls and Gates
    0305(h): Number of Islands II
    0310(m): Minimum Height Trees
    0317(h): Shortest Distance from All Buildings
    0323(m): Number of Connected Components in an Undirected Graph
    0329(h): Longest Increasing Path in a Matrix
    0417(m): Pacific Atlantic Water Flow
    0419(m): Battleships in a Board
    0463(e): Island Perimeter
    0489(h): Robot Room Cleaner
    0490(m): The Maze
    0498(m): Diagonal Traverse
    0505(m): The Maze II
    0529(m): Minesweeper
    0547(m): Number of Provinces
    0684(m): Redundant Connection
    0685(h): Redundant Connection II
    0694(m): Number of Distinct Islands
    0695(m): Max Area of Island
    0721(m): Accounts Merge 
    0733(e): Flood Fill
    0742(m): Closest Leaf in a Binary Tree
    0743(m): Network Delay Time
    0765(h): Couples Holding Hands
    0785(m): Is Graph Bipartite?
    0787(m): Cheapest Flights Within K Stops
    0797(m): All Paths From Source to Target
    0802(m): Find Eventual Safe States
    0841(m): Keys and Rooms
    0847(h): Shortest Path Visiting All Nodes
    0851(m): Loud and Rich 
    0863(m): All Nodes Distance K in Binary Tree
    0864(h): Shortest Path to Get All Keys
    0886(m): Possible Bipartition
    0909(m): Snakes and Ladders
    0934(m): Shortest Bridge
    0935(m): Knight Dialer
    0947(m): Most Stones Removed with Same Row or Column 
    0959(m): Regions Cut By Slashes
    0980(h): Unique Paths III
    0994(m): Rotting Oranges
    0997(e): Find the Town Judge
    0999(e): Available Captures for Rook
    1020(m): Number of Enclaves
    1030(e): Matrix Cells in Distance Order
    1034(m): Coloring A Border
    1042(m): Flower Planting With No Adjacent
    1059(m): All Paths from Source Lead to Destination
    1091(m): Shortest Path in Binary Matrix
    1102(m): Path With Maximum Minimum Value
    1129(m): Shortest Path with Alternating Colors 
    1135(m): Connecting Cities With Minimum Cost
    1136(m): Parallel Courses
    1162(m): As Far from Land as Possible
    1168(h): Optimize Water Distribution in a Village
    1192(h): Critical Connections in a Network
    1219(m): Path with Maximum Gold
    1222(m): Queens That Can Attack the King
    1254(m): Number of Closed Islands
    1311(m): Get Watched Videos by Your Friends
    1334(m): Find the City With the Smallest Number of Neighbors at a Threshold Distance
    1340(h): Jump Game V
    1368(h): Minimum Cost to Make at Least One Valid Path in a Grid
    1391(m): Check if There is a Valid Path in a Grid
    1462(m): Course Schedule IV
    1466(m): Reorder Routes to Make All Paths Lead to the City Zero
    1557(m): Minimum Number of Vertices to Reach All Nodes
    1584(m): Min Cost to Connect All Points
    1765(m): Map of Highest Peak
    1778(m): Shortest Path in a Hidden Grid
    1791(e): Find Center of Star Graph
    1810(m): Minimum Path Cost in a Hidden Grid
    1905(m): Count Sub Islands
    1926(m): Nearest Exit from Entrance in Maze
    1971(e): Find if Path Exists in Graph
    2039(m): The Time When the Network Becomes Idle
    2077(m): Paths in Maze That Lead to Same Room
    2093(m): Minimum Cost to Reach City With Discounts
    2101(m): Detonate the Maximum Bombs
    2115(m): Find All Possible Recipes from Given Supplies

--- Trie Tree:
    0208(m): Implement Trie (Prefix Tree)
    0211(m): Design Add and Search Words Data Structure
    0212(h): Word Search II
    0336(h): Palindrome Pairs
    0421(m): Maximum XOR of Two Numbers in an Array
    0616(m): Add Bold Tag in String
    0648(m): Replace Words
    0677(m): Map Sum Pairs
    0720(m): Longest Word in Dictionary
    0745(h): Prefix and Suffix Search
    0758(m): Bold Words in String
    0809(m): Expressive Words
    0820(m): Short Encoding of Words
    1065(e): Index Pairs of a String
    1166(m): Design File System
    1804(m): Implement Trie II (Prefix Tree)
    1858(m): Longest Word With All Prefixes

--- Segment Tree:
    0307(m): Range Sum Query - Mutable
    0315(h): Count of Smaller Numbers After Self
    0327(h): Count of Range Sum
    0493(h): Reverse Pairs
    1409(m): Queries on a Permutation With Key
    2080(m): Range Frequency Queries
    2179(h): Count Good Triplets in an Array

--- Tree:
    0094(e): Binary Tree Inorder Traversal
    0095(m): Unique Binary Search Trees II
    0096(m): Unique Binary Search Trees
    0098(m): Validate Binary Search Tree
    0099(m): Recover Binary Search Tree
    0100(e): Same Tree
    0101(e): Symmetric Tree
    0102(m): Binary Tree Level Order Traversal 
    0103(m): Binary Tree Zigzag Level Order Traversal
    0104(e): Maximum Depth of Binary Tree
    0105(m): Construct Binary Tree from Preorder and Inorder Traversal
    0106(m): Construct Binary Tree from Inorder and Postorder Traversal 
    0107(m): Binary Tree Level Order Traversal II
    0108(e): Convert Sorted Array to Binary Search Tree
    0109(m): Convert Sorted List to Binary Search Tree
    0110(e): Balanced Binary Tree
    0111(e): Minimum Depth of Binary Tree
    0112(e): Path Sum
    0113(m): Path Sum II
    0114(m): Flatten Binary Tree to Linked List 
    0116(m): Populating Next Right Pointers in Each Node
    0117(m): Populating Next Right Pointers in Each Node II
    0124(h): Binary Tree Maximum Path Sum
    0129(m): Sum Root to Leaf Numbers
    0144(e): Binary Tree Preorder Traversal
    0145(e): Binary Tree Postorder Traversal
    0156(m): Binary Tree Upside Down
    0173(m): Binary Search Tree Iterator
    0199(m): Binary Tree Right Side View
    0208(m): Implement Trie (Prefix Tree)
    0211(m): Design Add and Search Words Data Structure
    0212(h): Word Search II
    0222(m): Count Complete Tree Nodes
    0226(e): Invert Binary Tree
    0230(m): Kth Smallest Element in a BST
    0235(e): Lowest Common Ancestor of a Binary Search Tree
    0236(m): Lowest Common Ancestor of a Binary Tree
    0250(m): Count Univalue Subtrees
    0255(m): Verify Preorder Sequence in Binary Search Tree
    0257(e): Binary Tree Paths
    0261(m): Graph Valid Tree
    0270(e): Closest Binary Search Tree Value
    0272(h): Closest Binary Search Tree Value II
    0285(m): Inorder Successor in BST 
    0297(h): Serialize and Deserialize Binary Tree
    0298(m): Binary Tree Longest Consecutive Sequence
    0307(m): Range Sum Query - Mutable
    0310(m): Minimum Height Trees
    0314(m): Binary Tree Vertical Order Traversal
    0315(h): Count of Smaller Numbers After Self
    0327(h): Count of Range Sum
    0331(m): Verify Preorder Serialization of a Binary Tree
    0333(m): Largest BST Subtree
    0336(h): Palindrome Pairs
    0337(m): House Robber III
    0366(m): Find Leaves of Binary Tree
    0404(e): Sum of Left Leaves
    0421(m): Maximum XOR of Two Numbers in an Array
    0426(m): Convert Binary Search Tree to Sorted Doubly Linked List
    0427(m): Construct Quad Tree
    0428(h): Serialize and Deserialize N-ary Tree
    0429(m): N-ary Tree Level Order Traversal
    0431(h): Encode N-ary Tree to Binary Tree
    0437(m): Path Sum III
    0449(m): Serialize and Deserialize BST
    0450(m): Delete Node in a BST
    0493(h): Reverse Pairs
    0501(e): Find Mode in Binary Search Tree
    0508(m): Most Frequent Subtree Sum
    0510(m): Inorder Successor in BST II
    0513(m): Find Bottom Left Tree Value
    0515(m): Find Largest Value in Each Tree Row
    0530(e): Minimum Absolute Difference in BST
    0536(m): Construct Binary Tree from String
    0538(m): Convert BST to Greater Tree
    0543(e): Diameter of Binary Tree
    0545(m): Boundary of Binary Tree
    0549(m): Binary Tree Longest Consecutive Sequence II
    0559(e): Maximum Depth of N-ary Tree
    0563(e): Binary Tree Tilt
    0572(e): Subtree of Another Tree
    0582(m): Kill Process
    0589(e): N-ary Tree Preorder Traversal
    0590(e): N-ary Tree Postorder Traversal
    0606(e): Construct String from Binary Tree
    0616(m): Add Bold Tag in String
    0617(e): Merge Two Binary Trees
    0623(m): Add One Row to Tree
    0637(e): Average of Levels in Binary Tree
    0648(m): Replace Words
    0652(m): Find Duplicate Subtrees
    0653(e): Two Sum IV - Input is a BST
    0654(m): Maximum Binary Tree
    0655(m): Print Binary Tree
    0662(m): Maximum Width of Binary Tree
    0663(m): Equal Tree Partition
    0666(m): Path Sum IV
    0669(m): Trim a Binary Search Tree
    0671(e): Second Minimum Node In a Binary Tree
    0677(m): Map Sum Pairs
    0687(m): Longest Univalue Path
    0700(e): Search in a Binary Search Tree
    0701(m): Insert into a Binary Search Tree
    0705(e): Design HashSet
    0720(m): Longest Word in Dictionary
    0742(m): Closest Leaf in a Binary Tree
    0745(h): Prefix and Suffix Search
    0758(m): Bold Words in String
    0776(m): Split BST
    0783(e): Minimum Distance Between BST Nodes
    0809(m): Expressive Words
    0814(m): Binary Tree Pruning
    0820(m): Short Encoding of Words
    0863(m): All Nodes Distance K in Binary Tree
    0865(m): Smallest Subtree with all the Deepest Nodes
    0872(e): Leaf-Similar Trees
    0889(m): Construct Binary Tree from Preorder and Postorder Traversal
    0894(m): All Possible Full Binary Trees
    0897(e): Increasing Order Search Tree
    0919(m): Complete Binary Tree Inserter
    0938(e): Range Sum of BST
    0951(m): Flip Equivalent Binary Trees
    0958(m): Check Completeness of a Binary Tree
    0965(e): Univalued Binary Tree
    0971(m): Flip Binary Tree To Match Preorder Traversal
    0979(m): Distribute Coins in Binary Tree
    0987(h): Vertical Order Traversal of a Binary Tree
    0988(m): Smallest String Starting From Leaf
    0993(e): Cousins in Binary Tree
    0998(m): Maximum Binary Tree II
    1008(m): Construct Binary Search Tree from Preorder Traversal
    1022(e): Sum of Root To Leaf Binary Numbers
    1026(m): Maximum Difference Between Node and Ancestor
    1028(h): Recover a Tree From Preorder Traversal
    1038(m): Binary Search Tree to Greater Sum Tree
    1065(e): Index Pairs of a String
    1080(m): Insufficient Nodes in Root to Leaf Paths
    1104(m): Path In Zigzag Labelled Binary Tree
    1110(m): Delete Nodes And Return Forest
    1120(m): Maximum Average Subtree
    1123(m): Lowest Common Ancestor of Deepest Leaves
    1130(m): Minimum Cost Tree From Leaf Values
    1145(m): Binary Tree Coloring Game
    1161(m): Maximum Level Sum of a Binary Tree
    1166(m): Design File System
    1214(m): Two Sum BSTs
    1257(m): Smallest Common Region
    1261(m): Find Elements in a Contaminated Binary Tree
    1273(m): Delete Tree Nodes
    1302(m): Deepest Leaves Sum
    1305(m): All Elements in Two Binary Search Trees
    1315(m): Sum of Nodes with Even-Valued Grandparent
    1325(m): Delete Leaves With a Given Value
    1339(m): Maximum Product of Splitted Binary Tree
    1361(m): Validate Binary Tree Nodes
    1367(m): Linked List in Binary Tree
    1372(m): Longest ZigZag Path in a Binary Tree
    1376(m): Time Needed to Inform All Employees
    1379(m): Find a Corresponding Node of a Binary Tree in a Clone of That Tree
    1382(m): Balance a Binary Search Tree
    1408(e): String Matching in an Array
    1409(m): Queries on a Permutation With Key
    1430(m): Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree
    1443(m): Minimum Time to Collect All Apples in a Tree
    1448(m): Count Good Nodes in Binary Tree
    1457(m): Pseudo-Palindromic Paths in a Binary Tree
    1469(e): Find All The Lonely Nodes
    1485(m): Clone Binary Tree With Random Pointer
    1490(m): Clone N-ary Tree
    1506(m): Find Root of N-Ary Tree
    1519(m): Number of Nodes in the Sub-Tree With the Same Label
    1522(m): Diameter of N-Ary Tree
    1530(m): Number of Good Leaf Nodes Pairs
    1586(m): Binary Search Tree Iterator II
    1600(m): Throne Inheritance
    1602(m): Find Nearest Right Node in Binary Tree
    1609(m): Even Odd Tree
    1612(m): Check If Two Expression Trees are Equivalent
    1628(m): Design an Expression Tree With Evaluate Function 
    1644(m): Lowest Common Ancestor of a Binary Tree II
    1650(m): Lowest Common Ancestor of a Binary Tree III
    1660(m): Correct a Binary Tree
    1676(m): Lowest Common Ancestor of a Binary Tree IV
    1740(m): Find Distance in a Binary Tree
    1804(m): Implement Trie II (Prefix Tree)
    1858(m): Longest Word With All Prefixes
    1902(m): Depth of BST Given Insertion Order
    1973(m): Count Nodes Equal to Sum of Descendants
    1993(m): Operations on Tree
    2049(m): Count Nodes With the Highest Score
    2080(m): Range Frequency Queries
    2096(m): Step-By-Step Directions From a Binary Tree Node to Another
    2179(h): Count Good Triplets in an Array
    2236(e): Root Equals Sum of Children

--- Sequence:
    0031(m): Next Permutation
    0039(m): Combination Sum
    0040(m): Combination Sum II
    0046(m): Permutations
    0047(m): Permutations II
    0060(h): Permutation Sequence
    0077(m): Combinations
    0078(m): Subsets
    0090(m): Subsets II
    0128(m): Longest Consecutive Sequence
    0187(m): Repeated DNA Sequences
    0216(m): Combination Sum III
    0298(m): Binary Tree Longest Consecutive Sequence
    0300(m): Longest Increasing Subsequence
    0334(m): Increasing Triplet Subsequence
    0354(h): Russian Doll Envelopes
    0376(m): Wiggle Subsequence
    0377(m): Combination Sum IV
    0392(e): Is Subsequence
    0491(m): Increasing Subsequences
    0516(m): Longest Palindromic Subsequence
    0526(m): Beautiful Arrangement
    0556(m): Next Greater Element III
    0659(m): Split Array into Consecutive Subsequences
    0673(m): Number of Longest Increasing Subsequence
    0674(e): Longest Continuous Increasing Subsequence
    1079(m): Letter Tile Possibilities
    1081(m): Smallest Subsequence of Distinct Characters
    1087(m): Brace Expansion
    1143(m): Longest Common Subsequence

--- Math:
    0007(e): Reverse Integer
    0008(m): String to Integer (atoi)
    0009(e): Palindrome Number 
    0012(m): Integer to Roman
    0013(e): Roman to Integer
    0029(m): Divide Two Integers
    0043(m): Multiply Strings
    0050(m): Pow(x, n)
    0066(e): Plus One
    0069(e): Sqrt(x)
    0149(h): Max Points on a Line
    0168(e): Excel Sheet Column Title
    0171(e): Excel Sheet Column Number
    0172(e): Factorial Trailing Zeroes
    0202(e): Happy Number
    0204(m): Count Primes
    0224(h): Basic Calculator
    0227(m): Basic Calculator II
    0231(e): Power of Two
    0258(e): Add Digits
    0263(e): Ugly Number
    0264(m): Ugly Number II
    0273(h): Integer to English Words
    0279(m): Perfect Squares
    0292(e): Nim Game
    0294(m): Flip Game II
    0306(m): Additive Number
    0311(m): Sparse Matrix Multiplication 
    0313(m): Super Ugly Number
    0326(e): Power of Three
    0338(e): Counting Bits
    0342(e): Power of Four
    0343(m): Integer Break
    0356(m): Line Reflection
    0360(m): Sort Transformed Array
    0365(m): Water and Jug Problem
    0367(e): Valid Perfect Square
    0368(m): Largest Divisible Subset
    0369(m): Plus One Linked List
    0371(e): Sum of Two Integers
    0382(m): Linked List Random Node
    0384(m): Shuffle an Array
    0386(m): Lexicographical Numbers
    0397(m): Integer Replacement
    0398(m): Random Pick Index
    0399(m): Evaluate Division
    0405(e): Convert a Number to Hexadecimal
    0414(e): Third Maximum Number
    0415(e): Add Strings
    0441(e): Arranging Coins
    0445(m): Add Two Numbers II
    0453(e): Minimum Moves to Equal Array Elements
    0462(m): Minimum Moves to Equal Array Elements II
    0463(e): Island Perimeter
    0464(m): Can I Win
    0477(m): Total Hamming Distance
    0486(m): Predict the Winner
    0497(m): Random Point in Non-overlapping Rectangles
    0507(e): Perfect Number
    0509(e): Fibonacci Number
    0528(m): Random Pick with Weight
    0537(m): Complex Number Multiplication
    0539(m): Minimum Time Difference
    0556(m): Next Greater Element III
    0598(e): Range Addition II
    0628(e): Maximum Product of Three Numbers
    0633(m): Sum of Square Numbers
    0637(e): Average of Levels in Binary Tree
    0650(m): 2 Keys Keyboard
    0651(m): 4 Keys Keyboard
    0670(m): Maximum Swap
    0738(m): Monotone Increasing Digits
    0754(m): Reach a Number
    0772(h): Basic Calculator III
    0775(m): Global and Local Inversions
    0789(m): Escape The Ghosts
    0800(e): Similar RGB Color
    0840(m): Magic Squares In Grid
    0868(e): Binary Gap
    0888(e): Fair Candy Swap
    0892(e): Surface Area of 3D Shapes
    0908(e): Smallest Range I
    0910(m): Smallest Range II
    0914(e): X of a Kind in a Deck of Cards
    0939(m): Minimum Area Rectangle
    0942(e): DI String Match
    0957(m): Prison Cells After N Days
    0973(m): K Closest Points to Origin
    0976(e): Largest Perimeter Triangle
    0977(e): Squares of a Sorted Array
    0989(e): Add to Array-Form of Integer
    0991(m): Broken Calculator
    1018(e): Binary Prefix Divisible By 5
    1025(e): Divisor Game
    1037(e): Valid Boomerang
    1041(m): Robot Bounded In Circle
    1071(e): Greatest Common Divisor of Strings
    1085(e): Sum of Digits in the Minimum Number
    1103(e): Distribute Candies to People
    1104(m): Path In Zigzag Labelled Binary Tree
    1118(e): Number of Days in a Month
    1128(e): Number of Equivalent Domino Pairs
    1137(e): N-th Tribonacci Number
    1140(m): Stone Game II
    1154(e): Day of the Year
    1227(m): Airplane Seat Assignment Probability
    1230(m): Toss Strange Coins
    1232(e): Check If It Is a Straight Line
    1281(e): Subtract the Product and Sum of Digits of an Integer
    1304(e); Find N Unique Integers Sum up to Zero
    1359(h): Count All Valid Pickup and Delivery Options
    1447(m): Simplified Fractions
    1492(m): The kth Factor of n
    1513(m): Number of Substrings With Only 1s
    1518(e): Water Bottles
    1523(e): Count Odd Numbers in an Interval Range
    1524(m): Number of Sub-arrays With Odd Sum
    1561(m): Maximum Number of Coins You Can Get
    1573(m): Number of Ways to Split a String
    1698(m): Number of Distinct Substrings in a String
    1716(e): Calculate Money in Leetcode Bank
    1759(m): Count Number of Homogenous Substrings
    1780(m): Check if Number is a Sum of Powers of Three
    1814(m): Count Nice Pairs in an Array
    1822(e): Sign of the Product of an Array
    1823(m): Find the Winner of the Circular Game
    1837(e): Sum of Digits in Base K
    1908(m): Game of Nim
    1999(m): Smallest Greater Multiple Made of Two Digits
    2001(m): Number of Pairs of Interchangeable Rectangles
    2028(m): Find Missing Observations
    2033(m): Minimum Operations to Make a Uni-Value Grid
    2039(m): The Time When the Network Becomes Idle
    2083(m): Substrings That Begin and End With the Same Letter
    2101(m): Detonate the Maximum Bombs
    2110(m): Number of Smooth Descent Periods of a Stock
    2119(e): A Number After a Double Reversal
    2138(e): Divide a String Into Groups of Size k
    2152(m): Minimum Number of Lines to Cover Points
    2156(h): Find Substring With Given Hash Value
    2162(m): Minimum Cost to Set Cooking Time
    2169(e): Count Operations to Obtain Zero
    2176(e): Count Equal and Divisible Pairs in an Array
    2177(m): Find Three Consecutive Integers That Sum to a Given Number
    2178(m): Maximum Split of Positive Even Integers
    2180(e): Count Integers With Even Digit Sum
    2183(h): Count Array Pairs Divisible by K

--- Reservoir Sampling:
    0382(m): Linked List Random Node
    0384(m): Shuffle an Array
    0398(m): Random Pick Index
    0497(m): Random Point in Non-overlapping Rectangles

--- Concurrency:
    1114(e): Print in Order
    1188(m): Design Bounded Blocking Queue
    1195(m): Fizz Buzz Multithread

--- Sql:
    0175(e): Combine Two Tables
    1303(e): Find the Team Size
    1350(e): Students With Invalid Departments
    1378(e): Replace Employee ID With The Unique Identifier
    1587(e): Bank Account Summary II
    1571(e): Warehouse Manager
    1581(e): Customer Who Visited but Did Not Make Any Transactions
    1683(e): Invalid Tweets
    1693(e): Daily Leads and Partners
    1741(e): Find Total Time Spent by Each Employee
    1757(e): Recyclable and Low Fat Products
    1777(e): Product's Price for Each Store
    1821(e): Find Customers WITH Positive Revenue this Year
    1873(e): Calculate Special Bonus
    1890(e): The Latest Login in 2020

--- Interactive:
    0277(m): Find the Celebrity
    0278(e): First Bad Version
    0374(e): Guess Number Higher or Lower
    0489(h): Robot Room Cleaner
    0702(m): Search in a Sorted Array of Unknown Size
    1095(h): Find in Mountain Array
    1236(m): Web Crawler
    1274(h): Number of Ships in a Rectangle
    1428(m): Leftmost Column with at Least a One
    1533(m): Find the Index of the Large Integer
    1778(m): Shortest Path in a Hidden Grid
    1810(m): Minimum Path Cost in a Hidden Grid

--- Number Theory:
    0204(m): Count Primes
    0258(e): Add Digits
    0365(m): Water and Jug Problem
    0914(e): X of a Kind in a Deck of Cards
    1447(m): Simplified Fractions
    2001(m): Number of Pairs of Interchangeable Rectangles
    2176(e): Count Equal and Divisible Pairs in an Array
    2183(h): Count Array Pairs Divisible by K

--- Game Theory:
    0292(e): Nim Game
    0294(m): Flip Game II
    0375(m): Guess Number Higher or Lower II
    0464(m): Can I Win
    0486(m): Predict the Winner
    1025(e): Divisor Game
    1140(m): Stone Game II
    1561(m): Maximum Number of Coins You Can Get
    1908(m): Game of Nim

--- Rolling Hash:
    0187(m): Repeated DNA Sequences
    0718(m): Maximum Length of Repeated Subarray
    1554(m): Strings Differ by One Character
    1698(m): Number of Distinct Substrings in a String
    2156(h): Find Substring With Given Hash Value
    2168(m): Unique Substrings With Equal Digit Frequency
